
<repository lastmodified='20201029053001.271' name='2.1.0'>
  <resource id='com.apple.its.epubcheck-runner/4.4.1' md5='26459599224398419cc59f4a4d4d0461' presentationname='epubcheck-runner' sha256='e3d76ed73d85e0161c3e4535cee089d61426edf2b3376e7a5ab571a327588d1d' symbolicname='com.apple.its.epubcheck-runner' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.its.epubcheck-runner-4.4.1.jar' version='4.4.1'>
    <size>
      12308527
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='epubcheck-runner'/>
      <p n='symbolicname' v='com.apple.its.epubcheck-runner'/>
      <p n='version' t='version' v='4.4.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.its.epubcheck'/>
      <p n='uses' v='javax.annotation'/>
      <p n='version' t='version' v='4.4.1'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='26459599224398419cc59f4a4d4d0461'/>
      <p n='sha256' v='e3d76ed73d85e0161c3e4535cee089d61426edf2b3376e7a5ab571a327588d1d'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.json)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.json ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.annotation
    </require>
  </resource>
  <resource id='com.apple.its.epubtoolkit/2.6.4' md5='a303267cc4fe43f3e0d11852d8d0d70e' presentationname='epubtoolkit' sha256='9446c9ffdf46eb66bdd7f9fcb91aaddeb7f4548a8202ecea8d6086103f6fff27' symbolicname='com.apple.its.epubtoolkit' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.its.epubtoolkit-2.6.4.jar' version='2.6.4'>
    <size>
      280210
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='epubtoolkit'/>
      <p n='symbolicname' v='com.apple.its.epubtoolkit'/>
      <p n='version' t='version' v='2.6.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.itunes.epubtoolkit'/>
      <p n='uses' v='com.apple.itunes.epubtoolkit.model,com.apple.itunes.epubtoolkit.util,javax.xml.parsers,org.xml.sax,org.xml.sax.ext'/>
      <p n='version' t='version' v='2.6.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.itunes.epubtoolkit.cfi'/>
      <p n='uses' v='com.apple.itunes.epubtoolkit,com.fasterxml.jackson.annotation,org.jdom2,org.jsoup.nodes'/>
      <p n='version' t='version' v='2.6.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.itunes.epubtoolkit.commandline'/>
      <p n='uses' v='com.apple.itunes.epubtoolkit'/>
      <p n='version' t='version' v='2.6.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.itunes.epubtoolkit.html'/>
      <p n='uses' v='org.xml.sax'/>
      <p n='version' t='version' v='2.6.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.itunes.epubtoolkit.itemproperties'/>
      <p n='uses' v='com.apple.itunes.epubtoolkit'/>
      <p n='version' t='version' v='2.6.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.itunes.epubtoolkit.model'/>
      <p n='uses' v='com.apple.itunes.epubtoolkit,com.apple.itunes.epubtoolkit.cfi,org.jdom2'/>
      <p n='version' t='version' v='2.6.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.itunes.epubtoolkit.util'/>
      <p n='uses' v='com.apple.itunes.epubtoolkit,com.apple.itunes.epubtoolkit.model,javax.xml.transform,org.jdom2,org.jdom2.input,org.jdom2.input.sax,org.jdom2.xpath,org.xml.sax'/>
      <p n='version' t='version' v='2.6.4'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='a303267cc4fe43f3e0d11852d8d0d70e'/>
      <p n='sha256' v='9446c9ffdf46eb66bdd7f9fcb91aaddeb7f4548a8202ecea8d6086103f6fff27'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.jdom2)(version&gt;=2.0.5)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2 ;version=[2.0.5,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.filter)(version&gt;=2.0.5)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.filter ;version=[2.0.5,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.input)(version&gt;=2.0.5)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.input ;version=[2.0.5,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.input.sax)(version&gt;=2.0.5)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.input.sax ;version=[2.0.5,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.output)(version&gt;=2.0.5)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.output ;version=[2.0.5,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.util)(version&gt;=2.0.5)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.util ;version=[2.0.5,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.xpath)(version&gt;=2.0.5)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.xpath ;version=[2.0.5,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.itunes.epubtoolkit)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.itunes.epubtoolkit ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.itunes.epubtoolkit.cfi)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.itunes.epubtoolkit.cfi ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.itunes.epubtoolkit.itemproperties)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.itunes.epubtoolkit.itemproperties
       ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.itunes.epubtoolkit.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.itunes.epubtoolkit.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.itunes.epubtoolkit.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.itunes.epubtoolkit.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.annotation)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.annotation ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers)(version&gt;=1.11.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.compress.archivers ;version=[1.11.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers.zip)(version&gt;=1.11.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.compress.archivers.zip ;version=[1.11.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.log4j ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jsoup.nodes)(version&gt;=1.12.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jsoup.nodes ;version=[1.12.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jsoup.select)(version&gt;=1.12.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jsoup.select ;version=[1.12.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.ext
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='com.apple.transporter.api/1.8.0' md5='c1389f657899532f06efbaa5e0eff79d' presentationname='com.apple.transporter.api' sha256='a7adf8025a8dde4af66b69e808300a9799a896ea5d60bd568f2fa53b47854290' symbolicname='com.apple.transporter.api' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.api-1.8.0.jar' version='1.8.0'>
    <size>
      23224
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='com.apple.transporter.api'/>
      <p n='symbolicname' v='com.apple.transporter.api'/>
      <p n='version' t='version' v='1.8.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.args.api'/>
      <p n='uses' v='javax.annotation,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.commlink.api'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.credential.api'/>
      <p n='uses' v='javax.annotation'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.metadata.api'/>
      <p n='uses' v='javax.annotation,javax.xml.xpath,org.w3c.dom'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.stats.api'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.streaming.api'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.toolregistry.api'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.transport.api'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='c1389f657899532f06efbaa5e0eff79d'/>
      <p n='sha256' v='a7adf8025a8dde4af66b69e808300a9799a896ea5d60bd568f2fa53b47854290'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0))(optional=true)(mandatory:&lt;*optional))' multiple='false' name='package' optional='false'>
      Import package javax.annotation ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.xpath
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='com.apple.transporter.aspera-linux-x64/3.9.1.2020-08-10-2333-EST' md5='6e717d15713c6327304a60163c4df6f4' presentationname='com.apple.transporter.aspera-linux-x64' sha256='3431693fa8fe421b1686d8036ebc37c81bfbd4fb4f54f7a9a3971d193b742d27' symbolicname='com.apple.transporter.aspera-linux-x64' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.aspera-linux-x64-3.9.1.2020-08-10-2333-EST.jar' version='3.9.1.2020-08-10-2333-EST'>
    <size>
      3355408
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='com.apple.transporter.aspera-linux-x64'/>
      <p n='symbolicname' v='com.apple.transporter.aspera-linux-x64'/>
      <p n='version' t='version' v='3.9.1.2020-08-10-2333-EST'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='6e717d15713c6327304a60163c4df6f4'/>
      <p n='sha256' v='3431693fa8fe421b1686d8036ebc37c81bfbd4fb4f54f7a9a3971d193b742d27'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.toolregistry.api)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.toolregistry.api ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
  </resource>
  <resource id='com.apple.transporter.aspera-macos-arm64/3.9.1.2020-10-28-1600-EST' md5='2017b0bcbd31c96711bcb6de73092da0' presentationname='com.apple.transporter.aspera-macos-arm64' sha256='fcfae9b621661efd704dc205b744ad684ab057d29b73333ca1e521e19c5f2a97' symbolicname='com.apple.transporter.aspera-macos-arm64' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.aspera-macos-arm64-3.9.1.2020-10-28-1600-EST.jar' version='3.9.1.2020-10-28-1600-EST'>
     <capability name='bundle'>
       <p n='manifestversion' v='2'/>
       <p n='presentationname' v='com.apple.transporter.aspera-macos-arm64'/>
       <p n='symbolicname' v='com.apple.transporter.aspera-macos-arm64'/>
       <p n='version' t='version' v='3.9.1.2020-10-28-1600-EST'/>
     </capability>
     <capability name='com.apple.amp.checksums'>
       <p n='md5' v='2017b0bcbd31c96711bcb6de73092da0'/>
       <p n='sha256' v='fcfae9b621661efd704dc205b744ad684ab057d29b73333ca1e521e19c5f2a97'/>
     </capability>
     <require extend='false' filter='(&amp;(package=com.apple.transporter.toolregistry.api)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
       Import package com.apple.transporter.toolregistry.api ;version=[2.1.0,3.0.0)
     </require>
     <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
       Import package org.osgi.framework ;version=[1.9.0,2.0.0)
     </require>
   </resource>
  <resource id='com.apple.transporter.aspera-macos-x64/3.9.1.2020-08-10-2333-EST' md5='6451c6a4cd5d6fe577ead9a04f8b20ac' presentationname='com.apple.transporter.aspera-macos-x64' sha256='11bba16b70b469f409916668ca32b50c3690bb5ba9780543cbfde5e45b318fec' symbolicname='com.apple.transporter.aspera-macos-x64' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.aspera-macos-x64-3.9.1.2020-08-10-2333-EST.jar' version='3.9.1.2020-08-10-2333-EST'>
    <size>
      3815919
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='com.apple.transporter.aspera-macos-x64'/>
      <p n='symbolicname' v='com.apple.transporter.aspera-macos-x64'/>
      <p n='version' t='version' v='3.9.1.2020-08-10-2333-EST'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='6451c6a4cd5d6fe577ead9a04f8b20ac'/>
      <p n='sha256' v='11bba16b70b469f409916668ca32b50c3690bb5ba9780543cbfde5e45b318fec'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.toolregistry.api)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.toolregistry.api ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
  </resource>
  <resource id='com.apple.transporter.aspera-transport/1.1.0' md5='c432a1f17ff58e8b8168bb583be85e6d' presentationname='iTMS Transporter Aspera Fast Transport' sha256='0b5f19aa958ba6670eb5e5826fd68243ad79cddff0723941f4edd249d27af856' symbolicname='com.apple.transporter.aspera-transport' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.aspera-transport-1.1.0.jar' version='1.1.0'>
    <size>
      38434
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMS Transporter Aspera Fast Transport'/>
      <p n='symbolicname' v='com.apple.transporter.aspera-transport'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.asperasupport'/>
      <p n='uses' v='com.apple.transporter.core.api,com.apple.transporter.toolregistry.api,com.apple.transporter.transport.api,org.osgi.service.component'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='c432a1f17ff58e8b8168bb583be85e6d'/>
      <p n='sha256' v='0b5f19aa958ba6670eb5e5826fd68243ad79cddff0723941f4edd249d27af856'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.asperasupport)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.asperasupport ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.api)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.api ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.log)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.log ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.transport)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.transport ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.transport.log)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.transport.log ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.transport.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.transport.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.util)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.util ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.webservice)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.webservice ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.foundation)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.foundation ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.toolregistry.api)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.toolregistry.api ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.transport.api)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.transport.api ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.asperasoft.faspmanager)(version&gt;=3.7.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.asperasoft.faspmanager ;version=[3.7.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.exec)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.exec ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3)(version&gt;=3.10.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3 ;version=[3.10.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.4.0,2.0.0)
    </require>
  </resource>
  <resource id='com.apple.transporter.aspera-win-x86/3.9.1.2020-08-10-2333-EST' md5='ce4fc82c20a738022e5cd256f8d34e9c' presentationname='com.apple.transporter.aspera-win-x86' sha256='50c3087593eca109bf742087001b3f11633c7b0f9b83c6fff8c6a61a341b1a04' symbolicname='com.apple.transporter.aspera-win-x86' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.aspera-win-x86-3.9.1.2020-08-10-2333-EST.jar' version='3.9.1.2020-08-10-2333-EST'>
    <size>
      2639805
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='com.apple.transporter.aspera-win-x86'/>
      <p n='symbolicname' v='com.apple.transporter.aspera-win-x86'/>
      <p n='version' t='version' v='3.9.1.2020-08-10-2333-EST'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='ce4fc82c20a738022e5cd256f8d34e9c'/>
      <p n='sha256' v='50c3087593eca109bf742087001b3f11633c7b0f9b83c6fff8c6a61a341b1a04'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.toolregistry.api)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.toolregistry.api ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
  </resource>
  <resource id='com.apple.transporter.cliff/1.0.0' md5='7431f907f4dad20d8ca1e0268ded4165' presentationname='iTMS Transporter CLIFF Integration' sha256='fe57cdc0b1e95a92541a91087d563cbe6ffd0fda31d8933bf4838a89b30386bf' symbolicname='com.apple.transporter.cliff' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.cliff-1.0.0.jar' version='1.0.0'>
    <size>
      10583
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMS Transporter CLIFF Integration'/>
      <p n='symbolicname' v='com.apple.transporter.cliff'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='7431f907f4dad20d8ca1e0268ded4165'/>
      <p n='sha256' v='fe57cdc0b1e95a92541a91087d563cbe6ffd0fda31d8933bf4838a89b30386bf'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.args.api)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.args.api ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.api)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.api ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.log)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.log ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.util)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.util ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.cli)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.cli ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.exec)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.exec ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
  </resource>
  <resource id='com.apple.transporter.commlink/2.1.0' md5='4a6f77a2848733d978c0e4c0487de75c' presentationname='iTMS Transporter Communications Link' sha256='c26bc2429dac89e865cb86dba20cebaefe08d1f2178ff792fab88575b5ca88ef' symbolicname='com.apple.transporter.commlink' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.commlink-2.1.0.jar' version='2.1.0'>
    <size>
      55542
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMS Transporter Communications Link'/>
      <p n='symbolicname' v='com.apple.transporter.commlink'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='4a6f77a2848733d978c0e4c0487de75c'/>
      <p n='sha256' v='c26bc2429dac89e865cb86dba20cebaefe08d1f2178ff792fab88575b5ca88ef'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.commlink.api)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.commlink.api ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.log)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.log ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.foundation)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.foundation ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.json.simple)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.json.simple ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.json.simple.parser)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.json.simple.parser ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.6.0,2.0.0)
    </require>
  </resource>
  <resource id='com.apple.transporter.core/1.7.1' md5='d549c30b818842ebc8a73adc2188aeb2' presentationname='iTMS Transporter Core' sha256='d45b3bd4eb74b503e8314e20bc806d140381edf313acc2f27b8761d59fa7d6f7' symbolicname='com.apple.transporter.core' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.core-1.7.1.jar' version='1.7.1'>
    <size>
      468024
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMS Transporter Core'/>
      <p n='symbolicname' v='com.apple.transporter.core'/>
      <p n='version' t='version' v='1.7.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.api'/>
      <p n='uses' v='com.apple.jingle.leghorn.software,com.apple.transporter.core.webservice,com.apple.transporter.log4j2,com.apple.transporter.metadata.api,com.apple.transporter.stats.api,com.apple.transporter.toolregistry.api,javax.annotation,org.apache.http.conn.routing,org.osgi.framework'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.auth'/>
      <p n='uses' v='com.apple.transporter.core.api,com.apple.transporter.core.webservice,com.apple.transporter.core.ws.dto.requests,org.apache.commons.lang3.tuple,org.apache.http,org.apache.http.protocol'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.auth.jwt'/>
      <p n='uses' v='org.jose4j.lang'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.collections'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.concurrent'/>
      <p n='uses' v='javax.annotation'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.io'/>
      <p n='uses' v='javax.annotation'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.log'/>
      <p n='uses' v='com.apple.transporter.core.api,com.apple.transporter.core.webservice,com.apple.transporter.log4j2,javax.annotation,org.apache.logging.log4j.core.appender,org.json.simple,org.osgi.service.log'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.net'/>
      <p n='uses' v='com.apple.transporter.foundation'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.streaming'/>
      <p n='uses' v='com.apple.jingle.leghorn.fileformat,com.apple.transporter.streaming.api,javax.annotation,org.json.simple'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.util'/>
      <p n='uses' v='com.apple.jingle.leghorn.fileformat,com.apple.transporter.core.api,com.apple.transporter.core.io,com.apple.transporter.core.log,javax.annotation,org.json.simple.parser,org.osgi.framework'/>
      <p n='version' t='version' v='1.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.webservice'/>
      <p n='uses' v='com.apple.transporter.core.api,com.apple.transporter.streaming.api,javax.annotation,org.apache.commons.cli,org.apache.http,org.apache.http.impl.client,org.apache.http.protocol'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.webservice.headers'/>
      <p n='uses' v='org.apache.http,org.apache.http.protocol'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.ws.dto.requests'/>
      <p n='uses' v='com.apple.transporter.core.util,com.fasterxml.jackson.annotation'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.ws.dto.results'/>
      <p n='uses' v='com.apple.transporter.core.util,com.fasterxml.jackson.annotation'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.ws.jsonrpc2'/>
      <p n='uses' v='com.apple.transporter.core.webservice,com.fasterxml.jackson.core,com.fasterxml.jackson.databind,javax.annotation,org.apache.http,org.apache.http.client.protocol,org.apache.http.protocol'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.foundation'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.http'/>
      <p n='version' t='version' v='1.7.1'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='d549c30b818842ebc8a73adc2188aeb2'/>
      <p n='sha256' v='d45b3bd4eb74b503e8314e20bc806d140381edf313acc2f27b8761d59fa7d6f7'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.fileformat)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.fileformat ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.fileformat.exceptions)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.fileformat.exceptions
       ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.fileformat.impl)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.fileformat.impl ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.media)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.media ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.software)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.software ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.args.api)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.args.api ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.api)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.api ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.auth)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.auth ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.auth.jwt)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.auth.jwt ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.concurrent)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.concurrent ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.io)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.io ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.log)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.log ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.net)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.net ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.streaming)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.streaming ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.util)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.util ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.webservice.headers)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.webservice.headers
       ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.ws.dto.requests)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.ws.dto.requests ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.ws.jsonrpc2)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.ws.jsonrpc2 ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.credential.api)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.credential.api ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.foundation)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.foundation ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.log4j2)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.log4j2 ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.mediatoolkit)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.mediatoolkit ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.metadata.api)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.metadata.api ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.stats.api)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.stats.api ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.streaming.api)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.streaming.api ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.toolregistry.api)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.toolregistry.api ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.annotation ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.annotation ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.deser.std)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.deser.std ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.module)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.module ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.ser.std)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.ser.std ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.github.oxo42.stateless4j)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.github.oxo42.stateless4j ;version=[2.5.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.github.oxo42.stateless4j.delegates)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.github.oxo42.stateless4j.delegates ;version=[2.5.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.annotation ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto.spec
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.xpath
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.cli)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.cli ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec.binary)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec.binary
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers)(version&gt;=1.20.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.compress.archivers ;version=[1.20.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers.tar)(version&gt;=1.20.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.compress.archivers.tar ;version=[1.20.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.utils)(version&gt;=1.20.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.compress.utils ;version=[1.20.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.input)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.input ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.output)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.output ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3)(version&gt;=3.9.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3 ;version=[3.9.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3.builder)(version&gt;=3.9.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3.builder ;version=[3.9.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3.time)(version&gt;=3.9.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3.time ;version=[3.9.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3.tuple)(version&gt;=3.9.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3.tuple ;version=[3.9.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.config)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client.config ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.methods)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client.methods ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.protocol)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client.protocol ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.utils)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client.utils ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.config)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.config ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.conn)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.conn ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.conn.routing)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.conn.routing ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.entity)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.entity ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.client)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.client ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.conn)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.conn ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.message)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.message ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.protocol)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.protocol ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.util)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.util ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.appender)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.appender ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.layout)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.layout ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.spi)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.spi ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jose4j.jws)(version&gt;=0.6.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jose4j.jws ;version=[0.6.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jose4j.jwt)(version&gt;=0.6.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jose4j.jwt ;version=[0.6.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jose4j.lang)(version&gt;=0.6.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jose4j.lang ;version=[0.6.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.json.simple)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.json.simple ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.json.simple.parser)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.json.simple.parser ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='com.apple.transporter.core-transport/1.1.0' md5='b5b2a8326c83fe1ba732aeb91515cea8' presentationname='iTMS Transporter Transport API' sha256='e3c5ac55c5653d9da0ab5d69163d799c2b004315e97425daad5cf6b050510f2f' symbolicname='com.apple.transporter.core-transport' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.core-transport-1.1.0.jar' version='1.1.0'>
    <size>
      87130
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMS Transporter Transport API'/>
      <p n='symbolicname' v='com.apple.transporter.core-transport'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.transport'/>
      <p n='uses' v='com.apple.transporter.core.api,com.apple.transporter.core.webservice,javax.annotation,org.apache.http.client.methods,org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.transport.log'/>
      <p n='uses' v='com.apple.transporter.core.transport,com.apple.transporter.foundation,javax.annotation'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.core.transport.util'/>
      <p n='uses' v='com.apple.transporter.core.api,com.apple.transporter.core.transport,javax.annotation'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='b5b2a8326c83fe1ba732aeb91515cea8'/>
      <p n='sha256' v='e3c5ac55c5653d9da0ab5d69163d799c2b004315e97425daad5cf6b050510f2f'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.api)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.api ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.log)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.log ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.util)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.util ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.webservice)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.webservice ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.ws.dto.requests)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.ws.dto.requests ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.ws.dto.results)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.ws.dto.results ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.foundation)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.foundation ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.annotation ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.annotation ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec.digest)(version&gt;=1.14.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec.digest ;version=[1.14.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3)(version&gt;=3.10.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3 ;version=[3.10.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.methods)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client.methods ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
  </resource>
  <resource id='com.apple.transporter.dav-transport/1.0.0' md5='62ce232a114c18996fddeba5bc500727' presentationname='iTMS Transporter DAV Transport' sha256='c45a04d884df0cf4ed84ab186e32032b665e04b40d004ed6a795e82f48f1fe3c' symbolicname='com.apple.transporter.dav-transport' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.dav-transport-1.0.0.jar' version='1.0.0'>
    <size>
      35820
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMS Transporter DAV Transport'/>
      <p n='symbolicname' v='com.apple.transporter.dav-transport'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='62ce232a114c18996fddeba5bc500727'/>
      <p n='sha256' v='c45a04d884df0cf4ed84ab186e32032b665e04b40d004ed6a795e82f48f1fe3c'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.log)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.log ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.transport)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.transport ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.transport.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.transport.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.util)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.util ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.webservice)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.webservice ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.xpath
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.auth)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.auth ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.methods)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client.methods ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.utils)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client.utils ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.config)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.config ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.entity)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.entity ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.auth)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.auth ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.client)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.client ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.protocol)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.protocol ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.util)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.util ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='com.apple.transporter.http-transport/1.3.0' md5='1c19b2d5f47eb83e7895a73e1df37f87' presentationname='iTMS Transporter HTTP Transport' sha256='7f02dc3b7f68cce2ce5cc63c951cd09bfe1d2e6195ca45e43facbe2d9466530a' symbolicname='com.apple.transporter.http-transport' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.http-transport-1.3.0.jar' version='1.3.0'>
    <size>
      1000112
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMS Transporter HTTP Transport'/>
      <p n='symbolicname' v='com.apple.transporter.http-transport'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.transport.http'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.transport.http.ws'/>
      <p n='uses' v='com.apple.transporter.core.api,com.apple.transporter.core.concurrent,com.apple.transporter.core.util,com.apple.transporter.core.webservice,com.apple.transporter.core.ws.dto.requests,com.apple.transporter.core.ws.dto.results,com.fasterxml.jackson.annotation'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='1c19b2d5f47eb83e7895a73e1df37f87'/>
      <p n='sha256' v='7f02dc3b7f68cce2ce5cc63c951cd09bfe1d2e6195ca45e43facbe2d9466530a'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.api)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.api ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.collections)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.collections ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.concurrent)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.concurrent ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.io)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.io ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.log)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.log ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.transport)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.transport ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.transport.log)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.transport.log ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.transport.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.transport.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.util)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.util ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.webservice)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.webservice ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.ws.dto.requests)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.ws.dto.requests ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.ws.dto.results)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.ws.dto.results ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.log4j2)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.log4j2 ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.toolregistry.api)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.toolregistry.api ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.transport.http)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.transport.http ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.transport.http.ws)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.transport.http.ws ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.annotation ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.dataformat.xml.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.dataformat.xml.annotation
       ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.annotation ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.output)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.output ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.config)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client.config ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.methods)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client.methods ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.concurrent)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.concurrent ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.config)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.config ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.conn)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.conn ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.conn.routing)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.conn.routing ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.entity)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.entity ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.client)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.client ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.conn)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.conn ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.protocol)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.protocol ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.util)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.util ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.json.simple)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.json.simple ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.json.simple.parser)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.json.simple.parser ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
  </resource>
  <resource id='com.apple.transporter.itmstransporter/2.1.0' md5='77baf5ed3288ee1878557a40a1190692' presentationname='iTMS Transporter' sha256='b0430d82914a5141319ecd3bc6f1b7dbb21a06a928a5feae5d756cfd5e52a452' symbolicname='com.apple.transporter.itmstransporter' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.itmstransporter-2.1.0.jar' version='2.1.0'>
    <size>
      516134
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMS Transporter'/>
      <p n='symbolicname' v='com.apple.transporter.itmstransporter'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='77baf5ed3288ee1878557a40a1190692'/>
      <p n='sha256' v='b0430d82914a5141319ecd3bc6f1b7dbb21a06a928a5feae5d756cfd5e52a452'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.itunes.epubtoolkit)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.itunes.epubtoolkit ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.fileformat)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.fileformat ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.fileformat.exceptions)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.fileformat.exceptions
       ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.fileformat.impl)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.fileformat.impl ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.media)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.media ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.software)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.software ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.commlink.api)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.commlink.api ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.api)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.api ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.auth)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.auth ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.auth.jwt)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.auth.jwt ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.collections)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.collections ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.log)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.log ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.streaming)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.streaming ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.transport)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.transport ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.transport.log)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.transport.log ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.transport.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.transport.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.util)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.util ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.webservice)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.webservice ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.webservice.headers)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.webservice.headers
       ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.ws.jsonrpc2)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.ws.jsonrpc2 ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.foundation)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.foundation ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.mediatoolkit)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.mediatoolkit ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.metadata.api)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.metadata.api ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.stats.api)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.stats.api ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.streaming.api)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.streaming.api ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.toolregistry.api)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.toolregistry.api ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.dd.plist)(version&gt;=1.21.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.dd.plist ;version=[1.21.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.annotation ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.cli)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.cli ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec.binary)(version&gt;=1.14.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec.binary ;version=[1.14.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec.digest)(version&gt;=1.14.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec.digest ;version=[1.14.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.output)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.output ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3)(version&gt;=3.10.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3 ;version=[3.10.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3.time)(version&gt;=3.10.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3.time ;version=[3.10.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3.tuple)(version&gt;=3.10.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3.tuple ;version=[3.10.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.methods)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.client.methods ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.config)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.config ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.conn.routing)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.conn.routing ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.entity)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.entity ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.entity.mime)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.entity.mime ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.entity.mime.content)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.entity.mime.content ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.client)(version&gt;=4.5.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.client ;version=[4.5.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.protocol)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.protocol ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.util)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.util ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlbeans)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.xmlbeans ;version=[2.5.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.json.simple)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.json.simple ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.json.simple.parser)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.json.simple.parser ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='com.apple.transporter.jaxen-jdom/2.0.0' md5='0a26638dfa49063007015260ffb45b5e' presentationname='com.apple.transporter.jaxen-jdom' sha256='4ca486291ad8540f9493a77d2fc33b73fab1a32e8b9375953883ebc16c4f953f' symbolicname='com.apple.transporter.jaxen-jdom' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.jaxen-jdom-2.0.0.jar' version='2.0.0'>
    <size>
      885318
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='com.apple.transporter.jaxen-jdom'/>
      <p n='symbolicname' v='com.apple.transporter.jaxen-jdom'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j'/>
      <p n='uses' v='org.dom4j.rule,org.dom4j.tree,org.jaxen,org.xml.sax'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.dtd'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.io'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.stream,javax.xml.stream.events,javax.xml.stream.util,javax.xml.transform.sax,org.dom4j,org.dom4j.tree,org.gjt.xpp,org.w3c.dom,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers,org.xmlpull.v1'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.rule'/>
      <p n='uses' v='org.dom4j,org.jaxen'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.rule.pattern'/>
      <p n='uses' v='org.dom4j,org.dom4j.rule'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.tree'/>
      <p n='uses' v='org.dom4j,org.dom4j.rule,org.xml.sax'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.util'/>
      <p n='uses' v='org.dom4j,org.dom4j.rule,org.dom4j.tree,org.jaxen,org.xml.sax'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.xpath'/>
      <p n='uses' v='org.dom4j,org.dom4j.rule,org.jaxen,org.jaxen.pattern'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.dom4j.xpp'/>
      <p n='uses' v='org.dom4j,org.gjt.xpp'/>
      <p n='version' t='version' v='1.6.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen'/>
      <p n='uses' v='org.jaxen.expr,org.jaxen.saxpath'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.dom'/>
      <p n='uses' v='org.jaxen,org.jaxen.saxpath,org.w3c.dom'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.dom4j'/>
      <p n='uses' v='org.dom4j.io,org.jaxen,org.jaxen.saxpath'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.expr'/>
      <p n='uses' v='org.jaxen,org.jaxen.expr.iter'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.expr.iter'/>
      <p n='uses' v='org.jaxen'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.function'/>
      <p n='uses' v='org.jaxen'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.function.ext'/>
      <p n='uses' v='org.jaxen'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.function.xslt'/>
      <p n='uses' v='org.jaxen'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.javabean'/>
      <p n='uses' v='org.jaxen,org.jaxen.saxpath'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.jdom'/>
      <p n='uses' v='org.jaxen,org.jaxen.saxpath,org.jdom'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.pattern'/>
      <p n='uses' v='org.jaxen,org.jaxen.expr,org.jaxen.saxpath'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.saxpath'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.saxpath.base'/>
      <p n='uses' v='org.jaxen.saxpath'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.saxpath.helpers'/>
      <p n='uses' v='org.jaxen.saxpath'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jaxen.util'/>
      <p n='uses' v='org.jaxen'/>
      <p n='version' t='version' v='1.1.6'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom'/>
      <p n='uses' v='org.jdom.filter'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom.adapters'/>
      <p n='uses' v='org.jdom,org.w3c.dom'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom.filter'/>
      <p n='uses' v='org.jdom'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom.input'/>
      <p n='uses' v='org.jdom,org.w3c.dom,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom.output'/>
      <p n='uses' v='org.jdom,org.w3c.dom,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2'/>
      <p n='uses' v='org.jdom2.filter,org.jdom2.util'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.adapters'/>
      <p n='uses' v='org.jdom2,org.w3c.dom'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.filter'/>
      <p n='uses' v='org.jdom2'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.input'/>
      <p n='uses' v='javax.xml.stream,org.jdom2,org.jdom2.input.sax,org.jdom2.input.stax,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.input.sax'/>
      <p n='uses' v='javax.xml.parsers,javax.xml.transform,javax.xml.validation,org.jdom2,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.input.stax'/>
      <p n='uses' v='org.jdom2'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.internal'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.located'/>
      <p n='uses' v='org.jdom2'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.output'/>
      <p n='uses' v='javax.xml.stream,javax.xml.stream.util,org.jdom2,org.jdom2.adapters,org.jdom2.output.support,org.w3c.dom,org.xml.sax,org.xml.sax.ext'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.output.support'/>
      <p n='uses' v='javax.xml.stream,javax.xml.stream.util,org.jdom2,org.jdom2.output,org.jdom2.util,org.w3c.dom,org.xml.sax,org.xml.sax.ext'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.transform'/>
      <p n='uses' v='javax.xml.transform.sax,org.jdom2,org.xml.sax,org.xml.sax.ext'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.util'/>
      <p n='uses' v='org.jdom2'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.xpath'/>
      <p n='uses' v='org.jdom2,org.jdom2.filter'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.xpath.jaxen'/>
      <p n='uses' v='org.jdom2,org.jdom2.filter,org.jdom2.xpath'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jdom2.xpath.util'/>
      <p n='uses' v='org.jdom2,org.jdom2.filter,org.jdom2.xpath'/>
      <p n='version' t='version' v='2.0.5'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='0a26638dfa49063007015260ffb45b5e'/>
      <p n='sha256' v='4ca486291ad8540f9493a77d2fc33b73fab1a32e8b9375953883ebc16c4f953f'/>
    </capability>
    <require extend='false' filter='(&amp;(package=EDU.oswego.cs.dl.util.concurrent)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package EDU.oswego.cs.dl.util.concurrent
    </require>
    <require extend='false' filter='(&amp;(package=oracle.xml.parser)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.xml.parser
    </require>
    <require extend='false' filter='(&amp;(package=oracle.xml.parser.v2)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.xml.parser.v2
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.crimson.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.crimson.tree
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xerces.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xerces.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.gjt.xpp)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.gjt.xpp
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.ext
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(&amp;(package=org.xmlpull.v1)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xmlpull.v1
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.events
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.util
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dom4j ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j.dtd)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dom4j.dtd ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j.io)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dom4j.io ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j.rule)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dom4j.rule ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j.rule.pattern)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dom4j.rule.pattern ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j.tree)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dom4j.tree ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j.util)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dom4j.util ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j.xpath)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dom4j.xpath ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j.xpp)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.dom4j.xpp ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jaxen ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.dom4j)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jaxen.dom4j ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.expr)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jaxen.expr ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.expr.iter)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jaxen.expr.iter ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.function)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jaxen.function ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.function.ext)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jaxen.function.ext ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.function.xslt)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jaxen.function.xslt ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.pattern)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jaxen.pattern ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.saxpath)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jaxen.saxpath ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.saxpath.helpers)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jaxen.saxpath.helpers ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jaxen.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom.adapters)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom.adapters ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom.filter)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom.filter ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom.input)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom.input ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom.output)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom.output ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2 ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.adapters)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.adapters ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.filter)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.filter ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.input)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.input ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.input.sax)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.input.sax ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.input.stax)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.input.stax ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.internal)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.internal ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.output)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.output ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.output.support)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.output.support ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.util)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.util ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.xpath)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.xpath ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.xpath.jaxen)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.xpath.jaxen ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.xpath.util)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.xpath.util ;version=[2.0.0,3.0.0)
    </require>
  </resource>
  <resource id='com.apple.transporter.launcher-util/2.1.0' md5='00c52343fcf03779dff3e5af3953dbc2' presentationname='iTMS Transporter Launcher Utilities' sha256='3b0512174bb32024b6112a5a8a97eedc1e5c25cf6cdb27767fd4566975e6f32a' symbolicname='com.apple.transporter.launcher-util' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.launcher-util-2.1.0.jar' version='2.1.0'>
    <size>
      37119
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMS Transporter Launcher Utilities'/>
      <p n='symbolicname' v='com.apple.transporter.launcher-util'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.launcher.api'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.launcher.util'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='00c52343fcf03779dff3e5af3953dbc2'/>
      <p n='sha256' v='3b0512174bb32024b6112a5a8a97eedc1e5c25cf6cdb27767fd4566975e6f32a'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.launcher.api)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.launcher.api ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='com.apple.transporter.log4j2/1.0.0' md5='627872c2eab6acf20a32034803b2df4b' presentationname='com.apple.transporter.log4j2' sha256='ff5d87dbd64f9b3e59e9d90542153a163f92301726d73df6645f8dfa19c1cd52' symbolicname='com.apple.transporter.log4j2' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.log4j2-1.0.0.jar' version='1.0.0'>
    <size>
      70264
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='com.apple.transporter.log4j2'/>
      <p n='symbolicname' v='com.apple.transporter.log4j2'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.log4j2'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.util,org.osgi.service.cm'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j'/>
      <p n='uses' v='org.apache.log4j.spi,org.apache.logging.log4j.core'/>
      <p n='version' t='version' v='1.2.17'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j.config'/>
      <p n='uses' v='org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.builder.api,org.apache.logging.log4j.core.config.builder.impl,org.apache.logging.log4j.core.tools,org.apache.logging.log4j.core.tools.picocli'/>
      <p n='version' t='version' v='1.2.17'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j.helpers'/>
      <p n='version' t='version' v='1.2.17'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j.layout'/>
      <p n='uses' v='org.apache.logging.log4j.core,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.layout'/>
      <p n='version' t='version' v='1.2.17'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j.pattern'/>
      <p n='uses' v='org.apache.logging.log4j.core,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.pattern'/>
      <p n='version' t='version' v='1.2.17'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j.spi'/>
      <p n='uses' v='org.apache.log4j'/>
      <p n='version' t='version' v='1.2.17'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.log4j.xml'/>
      <p n='uses' v='javax.xml.parsers,org.apache.log4j.config,org.apache.log4j.spi,org.w3c.dom'/>
      <p n='version' t='version' v='1.2.17'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='627872c2eab6acf20a32034803b2df4b'/>
      <p n='sha256' v='ff5d87dbd64f9b3e59e9d90542153a163f92301726d73df6645f8dfa19c1cd52'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.log4j2)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.log4j2 ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.log4j ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.log4j.config ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j.helpers)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.log4j.helpers ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j.spi)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.log4j.spi ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.appender)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.appender ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.builder.api)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.builder.api
       ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.builder.impl)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.builder.impl
       ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.plugins)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.plugins
       ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.layout)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.layout ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.lookup)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.lookup ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.osgi)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.osgi ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.pattern)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.pattern ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.tools)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.tools ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.tools.picocli)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.tools.picocli
       ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.util)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.util ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.message)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.message ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.spi)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.spi ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.status)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.status ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.util)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.util ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='com.apple.transporter.mediatoolkit/2.1.1' md5='b518b81cf48706dc5472265689eb5e76' presentationname='iTMSTransporter Media Toolkit' sha256='235b1c530a10e6053ddcdfec1d219b267aa9dfb186c9784555833a6b23d5f636' symbolicname='com.apple.transporter.mediatoolkit' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.mediatoolkit-2.1.1.jar' version='2.1.1'>
    <size>
      13119073
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMSTransporter Media Toolkit'/>
      <p n='symbolicname' v='com.apple.transporter.mediatoolkit'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.foghorn.media'/>
      <p n='uses' v='com.apple.jingle.foghorn.media.types,com.apple.jingle.g5,com.apple.jingle.g5.util,javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.foghorn.media.types'/>
      <p n='uses' v='com.apple.jingle.foghorn.media,com.apple.jingle.leghorn.media.feature,com.apple.jingle.leghorn.media.index,javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.g5'/>
      <p n='uses' v='com.apple.jingle.foghorn.media,com.apple.jingle.foghorn.media.types,com.apple.jingle.leghorn.media.feature,com.apple.jingle.leghorn.media.file,com.apple.jingle.leghorn.media.index,javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.g5.util'/>
      <p n='uses' v='com.apple.jingle.leghorn.media.validator,javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn'/>
      <p n='uses' v='com.apple.jingle.g5.util,com.apple.jingle.leghorn.fileformat,com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.file,com.apple.jingle.leghorn.media.validator,javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.bitstream.avc'/>
      <p n='uses' v='com.apple.jingle.foghorn.media,com.apple.jingle.g5.util,com.apple.jingle.leghorn,com.apple.jingle.leghorn.bitstream.avc.sei,com.apple.jingle.leghorn.bitstream.avc.vui,javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.bitstream.avc.sei'/>
      <p n='uses' v='com.apple.jingle.leghorn.bitstream.avc'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.bitstream.avc.vui'/>
      <p n='uses' v='com.apple.jingle.g5.util,com.apple.jingle.leghorn.bitstream.avc,javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.fileformat'/>
      <p n='uses' v='com.apple.jingle.leghorn.fileformat.exceptions,com.apple.jingle.leghorn.fileformat.impl,com.apple.jingle.leghorn.fileformat.matcher,com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.file,javax.annotation,org.w3c.dom'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.fileformat.exceptions'/>
      <p n='uses' v='com.apple.jingle.leghorn.fileformat'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.fileformat.impl'/>
      <p n='uses' v='com.apple.jingle.leghorn.fileformat,com.apple.jingle.leghorn.fileformat.exceptions,com.apple.jingle.leghorn.fileformat.matcher,com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.file,com.apple.jingle.leghorn.media.validator,com.apple.jingle.leghorn.media.validator.conformance,javax.annotation,javax.xml.transform,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.fileformat.matcher'/>
      <p n='uses' v='com.apple.jingle.leghorn.fileformat,org.xml.sax'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.media'/>
      <p n='uses' v='com.apple.jingle.foghorn.media,com.apple.jingle.foghorn.media.types,com.apple.jingle.g5,com.apple.jingle.leghorn.fileformat,com.apple.jingle.leghorn.media.dolbymapping.file,com.apple.jingle.leghorn.media.feature,com.apple.jingle.leghorn.media.file,com.apple.jingle.leghorn.media.index,com.apple.jingle.leghorn.media.notification,com.apple.jingle.leghorn.media.validator,com.apple.jingle.leghorn.timecode,javax.annotation,javax.xml.bind,javax.xml.bind.annotation,javax.xml.bind.annotation.adapters,javax.xml.transform,org.w3c.dom'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.dolby.contentmapping'/>
      <p n='uses' v='com.apple.jingle.g5.util,com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.file,com.apple.jingle.leghorn.media.xml,com.apple.jingle.leghorn.timecode,javax.annotation,javax.xml.parsers,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.media.dolbymapping.file'/>
      <p n='uses' v='com.apple.jingle.foghorn.media.types,com.apple.jingle.leghorn.dolby.contentmapping,com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.file,com.apple.jingle.leghorn.timecode,javax.annotation,org.w3c.dom'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.media.feature'/>
      <p n='uses' v='com.apple.jingle.foghorn.media,com.apple.jingle.foghorn.media.types,com.apple.jingle.g5,com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.index,com.apple.jingle.leghorn.quicktime,com.apple.jingle.leghorn.timecode,javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.media.file'/>
      <p n='uses' v='com.apple.jingle.foghorn.media,com.apple.jingle.foghorn.media.types,com.apple.jingle.g5,com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.feature,com.apple.jingle.leghorn.media.validator,com.apple.jingle.leghorn.timecode,javax.annotation,org.w3c.dom'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.media.file.quicktime'/>
      <p n='uses' v='com.apple.jingle.foghorn.media,com.apple.jingle.foghorn.media.types,com.apple.jingle.g5.util,com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.feature,com.apple.jingle.leghorn.media.file,com.apple.jingle.leghorn.quicktime,com.apple.jingle.leghorn.timecode,javax.annotation,javax.xml.xpath,org.w3c.dom'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.media.index'/>
      <p n='uses' v='javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.media.notification'/>
      <p n='uses' v='com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.validator,javax.annotation,org.w3c.dom'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.media.validator'/>
      <p n='uses' v='com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.notification,javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.media.validator.conformance'/>
      <p n='uses' v='com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.feature,com.apple.jingle.leghorn.media.file,com.apple.jingle.leghorn.media.file.quicktime,com.apple.jingle.leghorn.media.validator,javax.annotation,org.w3c.dom'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.media.xml'/>
      <p n='uses' v='com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.file,com.apple.jingle.leghorn.media.validator,com.apple.jingle.leghorn.timecode,javax.annotation,javax.json'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.quicktime'/>
      <p n='uses' v='com.apple.jingle.leghorn,com.apple.jingle.leghorn.fileformat.exceptions,com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.validator,com.apple.jingle.leghorn.quicktime.atoms,com.apple.jingle.leghorn.quicktime.samples,com.apple.jingle.leghorn.util,javax.annotation,org.apache.log4j'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.quicktime.atoms'/>
      <p n='uses' v='com.apple.jingle.g5.util,com.apple.jingle.leghorn,com.apple.jingle.leghorn.quicktime,com.apple.jingle.leghorn.quicktime.sampledescriptions,com.apple.jingle.leghorn.util,javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.quicktime.samples'/>
      <p n='uses' v='com.apple.jingle.leghorn.quicktime,com.apple.jingle.leghorn.quicktime.atoms,com.apple.jingle.leghorn.timecode'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.quicktime.sampledescriptions'/>
      <p n='uses' v='com.apple.jingle.g5.util,com.apple.jingle.leghorn,com.apple.jingle.leghorn.bitstream.avc,com.apple.jingle.leghorn.quicktime,com.apple.jingle.leghorn.quicktime.atoms,com.apple.jingle.leghorn.util,javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.software'/>
      <p n='uses' v='com.apple.jingle.leghorn.fileformat,com.apple.jingle.leghorn.fileformat.exceptions,com.apple.jingle.leghorn.fileformat.impl,com.apple.jingle.leghorn.media'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.subtitle'/>
      <p n='uses' v='com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.media.validator,com.apple.jingle.leghorn.quicktime,com.apple.jingle.leghorn.subtitle.exportable,com.apple.jingle.leghorn.timecode,javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.subtitle.exportable'/>
      <p n='uses' v='com.apple.jingle.leghorn.quicktime,com.apple.jingle.leghorn.subtitle,com.apple.jingle.leghorn.timecode,com.apple.jingle.leghorn.util'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.timecode'/>
      <p n='uses' v='javax.annotation'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.util'/>
      <p n='uses' v='com.apple.jingle.leghorn.fileformat.exceptions,com.apple.jingle.leghorn.subtitle.exportable,com.apple.jingle.leghorn.timecode,com.apple.jingle.leghorn.util.javacc,javax.annotation,org.w3c.dom.ls'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.jingle.leghorn.util.javacc'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.mediatoolkit'/>
      <p n='uses' v='com.apple.jingle.leghorn.media,com.apple.jingle.leghorn.software,com.apple.transporter.toolregistry.api,org.osgi.framework'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlbeans'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.stream,org.apache.xmlbeans.xml.stream,org.w3c.dom,org.xml.sax,org.xml.sax.ext'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlbeans.xml.stream'/>
      <p n='uses' v='org.apache.xmlbeans.xml.stream.utils'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xmlbeans.xml.stream.utils'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='b518b81cf48706dc5472265689eb5e76'/>
      <p n='sha256' v='235b1c530a10e6053ddcdfec1d219b267aa9dfb186c9784555833a6b23d5f636'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.its.epubcheck)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.its.epubcheck ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.itunes.epubtoolkit)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.itunes.epubtoolkit ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.itunes.epubtoolkit.cfi)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.itunes.epubtoolkit.cfi ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.itunes.epubtoolkit.model)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.itunes.epubtoolkit.model ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.itunes.epubtoolkit.util)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.itunes.epubtoolkit.util ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.foghorn.media)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.foghorn.media
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.foghorn.media.types)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.foghorn.media.types
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.g5)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.g5
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.g5.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.g5.util
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.bitstream.avc.sei)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.bitstream.avc.sei
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.bitstream.avc.vui)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.bitstream.avc.vui
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.dolby.contentmapping)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.dolby.contentmapping
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.fileformat)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.fileformat
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.fileformat.exceptions)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.fileformat.exceptions
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.fileformat.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.fileformat.impl
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.fileformat.matcher)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.fileformat.matcher
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.media.dolbymapping.file)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.media.dolbymapping.file
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.media.feature)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.media.feature
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.media.file)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.media.file
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.media.index)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.media.index
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.media.notification)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.media.notification
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.media.validator)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.media.validator
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.media.xml)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.media.xml
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.quicktime.samples)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.quicktime.samples
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.software)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.software
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.timecode)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.timecode
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.util
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.util.javacc)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.util.javacc
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.mediatoolkit)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.mediatoolkit
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.toolregistry.api)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.toolregistry.api ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.marshaller)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.xml.bind.marshaller ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.xml.bind.v2 ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.annotation ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.json)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.json ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.table)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.table
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.tree)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.tree
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation.adapters ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.xpath
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.cli)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.cli ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec)(version&gt;=1.10.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec ;version=[1.10.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec.binary)(version&gt;=1.10.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec.binary ;version=[1.10.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections ;version=[3.2.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.input)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.input ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.output)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io.output ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3)(version&gt;=3.10.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3 ;version=[3.10.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3.builder)(version&gt;=3.10.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3.builder ;version=[3.10.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3.exception)(version&gt;=3.10.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3.exception ;version=[3.10.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3.tuple)(version&gt;=3.10.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3.tuple ;version=[3.10.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.stat)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.stat ;version=[2.2.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.stat.descriptive)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.stat.descriptive ;version=[2.2.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.log4j ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j.spi)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.log4j.spi ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.config)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.config ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.detect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.detect ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.exception)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.exception ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.io)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.io ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.metadata)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.metadata ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.mime)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.mime ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.mp3)(version&gt;=1.18.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.mp3 ;version=[1.18.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.sax)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.sax ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlbeans.xml.stream)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.xmlbeans.xml.stream ;version=[2.5.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlbeans.xml.stream.utils)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.xmlbeans.xml.stream.utils ;version=[2.5.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2 ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.json)(version&gt;=20180130.0.0)(!(version&gt;=20180131.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.json ;version=[20180130.0.0,20180131.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.ls)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.ls
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.ext
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.annotation ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.istack)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.sun.istack ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.activation ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto.interfaces)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto.interfaces
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto.spec
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.net)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.attachment)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.attachment ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.helpers)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.helpers ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.datatype
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.events
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.util
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.beanutils)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.beanutils ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec.net)(version&gt;=1.10.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec.net ;version=[1.10.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.map)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.map ;version=[3.2.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers)(version&gt;=1.11.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.compress.archivers ;version=[1.11.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers.zip)(version&gt;=1.11.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.compress.archivers.zip ;version=[1.11.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.math.linear)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.math.linear ;version=[2.2.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jaxen)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jaxen ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.filter)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.filter ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.input)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.input ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.input.sax)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.input.sax ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.output)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.output ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.util)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.util ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.xpath)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.xpath ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom2.xpath.jaxen)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jdom2.xpath.jaxen ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.json.simple)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.json.simple ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jsoup.nodes)(version&gt;=1.12.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jsoup.nodes ;version=[1.12.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jsoup.select)(version&gt;=1.12.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.jsoup.select ;version=[1.12.0,2.0.0)
    </require>
  </resource>
  <resource id='com.apple.transporter.resources/2.1.0' md5='5561b6ea0230874cf094075563b92e0b' presentationname='iTMS Transporter Resources' sha256='d6ba7d4caeff10e80ea99f89a071627472917ea635ddb3e5e4c2e72d6dfd8b81' symbolicname='com.apple.transporter.resources' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.resources-2.1.0.jar' version='2.1.0'>
    <size>
      65050
    </size>
    <capability name='fragment'>
      <p n='host' v='com.apple.transporter.itmstransporter'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='com.apple.transporter.itmstransporter'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMS Transporter Resources'/>
      <p n='symbolicname' v='com.apple.transporter.resources'/>
      <p n='version' t='version' v='2.1.0'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='5561b6ea0230874cf094075563b92e0b'/>
      <p n='sha256' v='d6ba7d4caeff10e80ea99f89a071627472917ea635ddb3e5e4c2e72d6dfd8b81'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=com.apple.transporter.itmstransporter)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host com.apple.transporter.itmstransporter
    </require>
  </resource>
  <resource id='com.apple.transporter.signiant-transport/1.1.0' md5='0141d26cff40277cb434a296c6f227ae' presentationname='iTMS Transporter Signiant Fast Transport' sha256='f3da9e3945904854b4aafbdd0c558d6fff9fcbf0fdd4cf6658d684d7a9ab44c4' symbolicname='com.apple.transporter.signiant-transport' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.signiant-transport-1.1.0.jar' version='1.1.0'>
    <size>
      30798
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMS Transporter Signiant Fast Transport'/>
      <p n='symbolicname' v='com.apple.transporter.signiant-transport'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='0141d26cff40277cb434a296c6f227ae'/>
      <p n='sha256' v='f3da9e3945904854b4aafbdd0c558d6fff9fcbf0fdd4cf6658d684d7a9ab44c4'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.log)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.log ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.transport)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.transport ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.transport.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.transport.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.util)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.util ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.webservice)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.webservice ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.toolregistry.api)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.toolregistry.api ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.signiant.interactivetransfer.engine)(version&gt;=10.6.0)(!(version&gt;=11.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.signiant.interactivetransfer.engine ;version=[10.6.0,11.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.signiant.interactivetransfer.engine.exceptions)(version&gt;=10.6.0)(!(version&gt;=11.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.signiant.interactivetransfer.engine.exceptions
       ;version=[10.6.0,11.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.signiant.mobilize.ddsclient.connection)(version&gt;=10.6.0)(!(version&gt;=11.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.signiant.mobilize.ddsclient.connection ;version=[10.6.0,11.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3)(version&gt;=3.10.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3 ;version=[3.10.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=sun.security.provider.certpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package sun.security.provider.certpath
    </require>
  </resource>
  <resource id='com.apple.transporter.softwaresupport/2.1.0' md5='a45c81e2c9c35c6a931533fb2156b5f0' presentationname='iTMS Transporter Software Support' sha256='691417a8b8e410939d39aaf88e57a9bcf26d713d8812b017cfe25cf63b1e6e10' symbolicname='com.apple.transporter.softwaresupport' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.softwaresupport-2.1.0.jar' version='2.1.0'>
    <size>
      2307038
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMS Transporter Software Support'/>
      <p n='symbolicname' v='com.apple.transporter.softwaresupport'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.apple.transporter.softwaresupport'/>
      <p n='uses' v='com.apple.jingle.leghorn.fileformat,com.apple.jingle.leghorn.fileformat.exceptions,com.apple.jingle.leghorn.software,com.apple.transporter.core.api,com.apple.transporter.stats.api,com.apple.transporter.toolregistry.api,org.osgi.framework'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='a45c81e2c9c35c6a931533fb2156b5f0'/>
      <p n='sha256' v='691417a8b8e410939d39aaf88e57a9bcf26d713d8812b017cfe25cf63b1e6e10'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.fileformat)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.fileformat ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.fileformat.exceptions)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.fileformat.exceptions
       ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.jingle.leghorn.software)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.jingle.leghorn.software ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.api)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.api ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.log)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.log ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.streaming)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.streaming ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.core.util)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.core.util ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.mediatoolkit)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.mediatoolkit ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.metadata.api)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.metadata.api ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.softwaresupport)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.softwaresupport
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.stats.api)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.stats.api ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.streaming.api)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.streaming.api ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.toolregistry.api)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.toolregistry.api ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.dd.plist)(version&gt;=1.21.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.dd.plist ;version=[1.21.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.annotation ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.xpath
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.io ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='com.apple.transporter.starter/2.1.0.07' md5='45c5a928c7ee79688816b53865431369' presentationname='iTMS Transporter Starter' sha256='c8c93d0996b4e1a8a56d710503736d87e1e5c34de54739792d6e3008b38db376' symbolicname='com.apple.transporter.starter' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.apple.transporter.starter-2.1.0.07.jar' version='2.1.0.07'>
    <size>
      56435
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='iTMS Transporter Starter'/>
      <p n='symbolicname' v='com.apple.transporter.starter'/>
      <p n='version' t='version' v='2.1.0.07'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='45c5a928c7ee79688816b53865431369'/>
      <p n='sha256' v='c8c93d0996b4e1a8a56d710503736d87e1e5c34de54739792d6e3008b38db376'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=3.0.0)(!(version&gt;=4.0.0))(optional=true)(mandatory:&lt;*optional))' multiple='false' name='package' optional='false'>
      Import package javax.annotation ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.launcher.api)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.launcher.api ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.launcher.util)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.launcher.util ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.apple.transporter.log4j2)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.apple.transporter.log4j2 ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.cli)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.cli ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.bundlerepository)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.bundlerepository ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.indexer)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.indexer ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.indexer.impl.types)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.indexer.impl.types ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.indexer.impl.util)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.indexer.impl.util ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
  </resource>
  <resource id='com.aspera.faspmanager-osgi/3.7.2.0' md5='a1c11e7673f13c31af9578b52b1b3fad' presentationname='OSGi - Aspera FASPManager API' sha256='6c457037dc5c8e897655bbf38ee531605f0ce6615a95fbff5c295e5ebb604991' symbolicname='com.aspera.faspmanager-osgi' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.aspera.faspmanager-osgi-3.7.2.0.jar' version='3.7.2.0'>
    <size>
      144539
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='OSGi - Aspera FASPManager API'/>
      <p n='symbolicname' v='com.aspera.faspmanager-osgi'/>
      <p n='version' t='version' v='3.7.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.asperasoft.faspmanager'/>
      <p n='uses' v='com.google.gson,javax.xml.bind.annotation'/>
      <p n='version' t='version' v='3.7.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.asperasoft.faspmanager.util'/>
      <p n='uses' v='javax.xml.bind.annotation.adapters,org.apache.commons.exec'/>
      <p n='version' t='version' v='3.7.2'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='a1c11e7673f13c31af9578b52b1b3fad'/>
      <p n='sha256' v='6c457037dc5c8e897655bbf38ee531605f0ce6615a95fbff5c295e5ebb604991'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.asperasoft.faspmanager)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.asperasoft.faspmanager
    </require>
    <require extend='false' filter='(&amp;(package=com.asperasoft.faspmanager.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.asperasoft.faspmanager.util
    </require>
    <require extend='false' filter='(&amp;(package=com.google.gson)(version&gt;=2.7.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.google.gson ;version=[2.7.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation.adapters
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec.binary)(version&gt;=1.14.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.codec.binary ;version=[1.14.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.exec)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.exec ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang.builder)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang.builder ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='com.fasterxml.jackson.core.jackson-annotations/2.9.8' md5='25fed62a8553a51981b5225d703a23ef' presentationname='Jackson-annotations' sha256='fdca896161766ca4a2c3e06f02f6a5ede22a5b3a55606541cd2838eace08ca23' symbolicname='com.fasterxml.jackson.core.jackson-annotations' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.fasterxml.jackson.core.jackson-annotations-2.9.8.jar' version='2.9.8'>
    <description>
      Core annotations used for value types, used by Jackson data
       binding package.
    </description>
    <size>
      66894
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://github.com/FasterXML/jackson
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Jackson-annotations'/>
      <p n='symbolicname' v='com.fasterxml.jackson.core.jackson-annotations'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.annotation'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='25fed62a8553a51981b5225d703a23ef'/>
      <p n='sha256' v='fdca896161766ca4a2c3e06f02f6a5ede22a5b3a55606541cd2838eace08ca23'/>
    </capability>
  </resource>
  <resource id='com.fasterxml.jackson.core.jackson-core/2.9.8' md5='65831e4f46f29db904708e4b9cc72843' presentationname='Jackson-core' sha256='d934dab0bd48994eeea2c1b493cb547158a338a80b58c4fbc8e85fb0905e105f' symbolicname='com.fasterxml.jackson.core.jackson-core' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.fasterxml.jackson.core.jackson-core-2.9.8.jar' version='2.9.8'>
    <description>
      Core Jackson processing abstractions (aka Streaming API), implementation
       for JSON
    </description>
    <size>
      325619
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      https://github.com/FasterXML/jackson-core
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Jackson-core'/>
      <p n='symbolicname' v='com.fasterxml.jackson.core.jackson-core'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.core'/>
      <p n='uses' v='com.fasterxml.jackson.core.async,com.fasterxml.jackson.core.format,com.fasterxml.jackson.core.io,com.fasterxml.jackson.core.sym,com.fasterxml.jackson.core.type,com.fasterxml.jackson.core.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.core.async'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.core.base'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.core.io,com.fasterxml.jackson.core.json,com.fasterxml.jackson.core.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.core.filter'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.core.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.core.format'/>
      <p n='uses' v='com.fasterxml.jackson.core'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.core.io'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.core.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.core.json'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.core.base,com.fasterxml.jackson.core.format,com.fasterxml.jackson.core.io,com.fasterxml.jackson.core.sym'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.core.json.async'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.core.async,com.fasterxml.jackson.core.base,com.fasterxml.jackson.core.io,com.fasterxml.jackson.core.sym'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.core.sym'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.core.type'/>
      <p n='uses' v='com.fasterxml.jackson.core'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.core.util'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.core.io'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='65831e4f46f29db904708e4b9cc72843'/>
      <p n='sha256' v='d934dab0bd48994eeea2c1b493cb547158a338a80b58c4fbc8e85fb0905e105f'/>
    </capability>
  </resource>
  <resource id='com.fasterxml.jackson.core.jackson-databind/2.9.8' md5='39271d9bb1cb7ec563925953b1fa9ff7' presentationname='jackson-databind' sha256='2351c3eba73a545db9079f5d6d768347ad72666537362c8220fe3e950a55a864' symbolicname='com.fasterxml.jackson.core.jackson-databind' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.fasterxml.jackson.core.jackson-databind-2.9.8.jar' version='2.9.8'>
    <description>
      General data-binding functionality for Jackson: works on core
       streaming API
    </description>
    <size>
      1347236
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://github.com/FasterXML/jackson
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='jackson-databind'/>
      <p n='symbolicname' v='com.fasterxml.jackson.core.jackson-databind'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.core.filter,com.fasterxml.jackson.core.format,com.fasterxml.jackson.core.io,com.fasterxml.jackson.core.type,com.fasterxml.jackson.databind.annotation,com.fasterxml.jackson.databind.cfg,com.fasterxml.jackson.databind.deser,com.fasterxml.jackson.databind.deser.impl,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsonFormatVisitors,com.fasterxml.jackson.databind.jsonschema,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.jsontype.impl,com.fasterxml.jackson.databind.node,com.fasterxml.jackson.databind.ser,com.fasterxml.jackson.databind.ser.impl,com.fasterxml.jackson.databind.type,com.fasterxml.jackson.databind.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.annotation'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.deser,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.ser,com.fasterxml.jackson.databind.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.cfg'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.core.type,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.deser,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.ser,com.fasterxml.jackson.databind.type,com.fasterxml.jackson.databind.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.deser'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.core.format,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.annotation,com.fasterxml.jackson.databind.cfg,com.fasterxml.jackson.databind.deser.impl,com.fasterxml.jackson.databind.deser.std,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsonFormatVisitors,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.type,com.fasterxml.jackson.databind.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.deser.impl'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.cfg,com.fasterxml.jackson.databind.deser,com.fasterxml.jackson.databind.deser.std,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.deser.std'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.annotation,com.fasterxml.jackson.databind.deser,com.fasterxml.jackson.databind.deser.impl,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.exc'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.introspect'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.ext'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.deser,com.fasterxml.jackson.databind.deser.std,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsonFormatVisitors,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.ser,com.fasterxml.jackson.databind.ser.std,javax.xml.datatype,javax.xml.parsers,org.w3c.dom,org.w3c.dom.ls'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.introspect'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.annotation,com.fasterxml.jackson.databind.cfg,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.jsontype.impl,com.fasterxml.jackson.databind.ser,com.fasterxml.jackson.databind.type,com.fasterxml.jackson.databind.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.jsonFormatVisitors'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.databind'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.jsonschema'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.node'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.jsontype'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.core.type,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.cfg,com.fasterxml.jackson.databind.introspect'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.jsontype.impl'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.core.type,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.cfg,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.type,com.fasterxml.jackson.databind.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.module'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.deser,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.ser,com.fasterxml.jackson.databind.type'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.node'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.core.base,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.ser'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.core.io,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.annotation,com.fasterxml.jackson.databind.cfg,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsonFormatVisitors,com.fasterxml.jackson.databind.jsonschema,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.node,com.fasterxml.jackson.databind.ser.impl,com.fasterxml.jackson.databind.ser.std,com.fasterxml.jackson.databind.type,com.fasterxml.jackson.databind.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.ser.impl'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.core.io,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.annotation,com.fasterxml.jackson.databind.cfg,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsonFormatVisitors,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.node,com.fasterxml.jackson.databind.ser,com.fasterxml.jackson.databind.ser.std,com.fasterxml.jackson.databind.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.ser.std'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.core.type,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.annotation,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsonFormatVisitors,com.fasterxml.jackson.databind.jsonschema,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.node,com.fasterxml.jackson.databind.ser,com.fasterxml.jackson.databind.ser.impl,com.fasterxml.jackson.databind.type,com.fasterxml.jackson.databind.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.type'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.core.type,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.util'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.databind.util'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.core.base,com.fasterxml.jackson.core.json,com.fasterxml.jackson.core.util,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.cfg,com.fasterxml.jackson.databind.deser,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.type'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='39271d9bb1cb7ec563925953b1fa9ff7'/>
      <p n='sha256' v='2351c3eba73a545db9079f5d6d768347ad72666537362c8220fe3e950a55a864'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.annotation ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.base)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.base ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.filter)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.filter ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.format)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.format ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.io)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.io ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.json)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.json ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.type)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.type ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.util)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.util ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.annotation ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.cfg)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.cfg ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.deser)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.deser ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.deser.impl)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.deser.impl ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.deser.std)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.deser.std ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.exc)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.exc ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.ext)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.ext ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.introspect)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.introspect ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.jsonFormatVisitors)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.jsonFormatVisitors
       ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.jsonschema)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.jsonschema ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.jsontype)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.jsontype ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.jsontype.impl)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.jsontype.impl
       ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.node)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.node ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.ser)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.ser ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.ser.impl)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.ser.impl ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.ser.std)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.ser.std ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.type)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.type ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.util)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.util ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.datatype
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.bootstrap)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.bootstrap
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.ls)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.ls
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='com.fasterxml.jackson.dataformat.jackson-dataformat-xml/2.9.8' md5='2005924f3b3cbb3cc3afe735d008615e' presentationname='Jackson-dataformat-XML' sha256='ebbd9e23e932968137ad71919d1d96cf00f87d8a2871dc792d4cc0a4f056a432' symbolicname='com.fasterxml.jackson.dataformat.jackson-dataformat-xml' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.fasterxml.jackson.dataformat.jackson-dataformat-xml-2.9.8.jar' version='2.9.8'>
    <description>
      Data format extension for Jackson (http://jackson.codehaus.org)
       to offeralternative support for serializing POJOs as XML and
       deserializing XML as pojos.Support implemented on top of Stax
       API (javax.xml.stream), by implementing core Jackson Streaming
       API types like JsonGenerator, JsonParser and JsonFactory.Some
       data-binding types overridden as well (ObjectMapper sub-classed
       as XmlMapper).
    </description>
    <size>
      99323
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://wiki.fasterxml.com/JacksonExtensionXmlDataBinding
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Jackson-dataformat-XML'/>
      <p n='symbolicname' v='com.fasterxml.jackson.dataformat.jackson-dataformat-xml'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.dataformat.xml'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.core.format,com.fasterxml.jackson.core.io,com.fasterxml.jackson.core.type,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.cfg,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.jsontype.impl,com.fasterxml.jackson.databind.module,com.fasterxml.jackson.databind.type,com.fasterxml.jackson.dataformat.xml.deser,com.fasterxml.jackson.dataformat.xml.ser,com.fasterxml.jackson.dataformat.xml.util,com.fasterxml.jackson.module.jaxb,javax.xml.stream,org.codehaus.stax2'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.dataformat.xml.annotation'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.dataformat.xml.deser'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.core.base,com.fasterxml.jackson.core.io,com.fasterxml.jackson.core.util,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.deser,com.fasterxml.jackson.databind.deser.std,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsontype,javax.xml.stream,org.codehaus.stax2'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.dataformat.xml.jaxb'/>
      <p n='uses' v='com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.type,com.fasterxml.jackson.dataformat.xml,com.fasterxml.jackson.module.jaxb'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.dataformat.xml.ser'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.core.base,com.fasterxml.jackson.core.io,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.ser,com.fasterxml.jackson.databind.ser.impl,com.fasterxml.jackson.databind.ser.std,com.fasterxml.jackson.databind.util,com.fasterxml.jackson.dataformat.xml,com.fasterxml.jackson.dataformat.xml.util,javax.xml.namespace,javax.xml.stream,org.codehaus.stax2'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.dataformat.xml.util'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.core.util,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.cfg,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.type,com.fasterxml.jackson.databind.util,com.fasterxml.jackson.dataformat.xml,javax.xml.namespace,javax.xml.stream,org.codehaus.stax2'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='2005924f3b3cbb3cc3afe735d008615e'/>
      <p n='sha256' v='ebbd9e23e932968137ad71919d1d96cf00f87d8a2871dc792d4cc0a4f056a432'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.annotation ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.base)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.base ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.format)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.format ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.io)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.io ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.json)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.json ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.type)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.type ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.util)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.util ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.cfg)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.cfg ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.deser)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.deser ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.deser.std)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.deser.std ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.introspect)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.introspect ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.jsontype)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.jsontype ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.jsontype.impl)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.jsontype.impl
       ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.module)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.module ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.ser)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.ser ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.ser.impl)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.ser.impl ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.ser.std)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.ser.std ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.type)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.type ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.util)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.util ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.dataformat.xml)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.dataformat.xml ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.dataformat.xml.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.dataformat.xml.annotation
       ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.dataformat.xml.deser)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.dataformat.xml.deser ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.dataformat.xml.ser)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.dataformat.xml.ser ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.dataformat.xml.util)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.dataformat.xml.util ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.module.jaxb)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.module.jaxb ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.stax2)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.stax2 ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.stax2.io)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.stax2.io ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.stax2.ri)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.stax2.ri ;version=[3.1.0,4.0.0)
    </require>
  </resource>
  <resource id='com.fasterxml.jackson.module.jackson-module-jaxb-annotations/2.9.8' md5='55e5fe9affafcec64b194e756feb19d4' presentationname='Jackson module: JAXB Annotations' sha256='fadf854c7b2b3bd0ba919e5b5ea1182076f57e68e3151652b8ab19dabb4059aa' symbolicname='com.fasterxml.jackson.module.jackson-module-jaxb-annotations' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.fasterxml.jackson.module.jackson-module-jaxb-annotations-2.9.8.jar' version='2.9.8'>
    <description>
      Support for using JAXB annotations as an alternative to "native"
       Jackson annotations, for configuringdata-binding.
    </description>
    <size>
      32627
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      https://github.com/FasterXML/jackson-modules-base
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Jackson module: JAXB Annotations'/>
      <p n='symbolicname' v='com.fasterxml.jackson.module.jackson-module-jaxb-annotations'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.module.jaxb'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.cfg,com.fasterxml.jackson.databind.introspect,com.fasterxml.jackson.databind.jsontype,com.fasterxml.jackson.databind.type,com.fasterxml.jackson.databind.util,javax.xml.bind.annotation,javax.xml.bind.annotation.adapters'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.module.jaxb.deser'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.deser.std,javax.activation,javax.xml.parsers,org.w3c.dom'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.fasterxml.jackson.module.jaxb.ser'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.jsonFormatVisitors,com.fasterxml.jackson.databind.ser.std,javax.activation,org.w3c.dom'/>
      <p n='version' t='version' v='2.9.8'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='55e5fe9affafcec64b194e756feb19d4'/>
      <p n='sha256' v='fadf854c7b2b3bd0ba919e5b5ea1182076f57e68e3151652b8ab19dabb4059aa'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.annotation ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.util)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.core.util ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.cfg)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.cfg ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.deser.std)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.deser.std ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.introspect)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.introspect ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.jsonFormatVisitors)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.jsonFormatVisitors
       ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.jsontype)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.jsontype ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.jsontype.impl)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.jsontype.impl
       ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.node)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.node ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.ser.std)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.ser.std ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.type)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.type ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.util)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.databind.util ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.module.jaxb.deser)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.module.jaxb.deser ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.module.jaxb.ser)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package com.fasterxml.jackson.module.jaxb.ser ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.activation
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation.adapters
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='com.fasterxml.woodstox.woodstox-core/5.0.3' md5='8b151bd3d262d9c07e0384b7cc6c4cd9' presentationname='Woodstox' sha256='a1c04b64fbfe20ae9f2c60a3bf1633fed6688ae31935b6bd4a457a1bbb2e82d4' symbolicname='com.fasterxml.woodstox.woodstox-core' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.fasterxml.woodstox.woodstox-core-5.0.3.jar' version='5.0.3'>
    <description>
      Woodstox is a high-performance XML processor thatimplements
       Stax (JSR-173), SAX2 and Stax2 APIs
    </description>
    <size>
      512742
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      https://github.com/FasterXML/woodstox
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Woodstox'/>
      <p n='symbolicname' v='com.fasterxml.woodstox.woodstox-core'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.api'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.cfg'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.compat'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.dom'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.dtd'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.ent'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.evt'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.exc'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.io'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.msv'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.osgi'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.sax'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.sr'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.stax'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.sw'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.ctc.wstx.util'/>
      <p n='version' t='version' v='5.0.3'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='8b151bd3d262d9c07e0384b7cc6c4cd9'/>
      <p n='sha256' v='a1c04b64fbfe20ae9f2c60a3bf1633fed6688ae31935b6bd4a457a1bbb2e82d4'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.msv.grammar)(version&gt;=2013.6.0)(!(version&gt;=2014.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.msv.grammar ;version=[2013.6.0,2014.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.msv.grammar.trex)(version&gt;=2013.6.0)(!(version&gt;=2014.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.msv.grammar.trex ;version=[2013.6.0,2014.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.msv.grammar.xmlschema)(version&gt;=2013.6.0)(!(version&gt;=2014.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.msv.grammar.xmlschema ;version=[2013.6.0,2014.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.msv.reader)(version&gt;=2013.6.0)(!(version&gt;=2014.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.msv.reader ;version=[2013.6.0,2014.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.msv.reader.trex.ng)(version&gt;=2013.6.0)(!(version&gt;=2014.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.msv.reader.trex.ng ;version=[2013.6.0,2014.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.msv.reader.util)(version&gt;=2013.6.0)(!(version&gt;=2014.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.msv.reader.util ;version=[2013.6.0,2014.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.msv.reader.xmlschema)(version&gt;=2013.6.0)(!(version&gt;=2014.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.msv.reader.xmlschema ;version=[2013.6.0,2014.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.msv.util)(version&gt;=2013.6.0)(!(version&gt;=2014.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.msv.util ;version=[2013.6.0,2014.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.msv.verifier)(version&gt;=2013.6.0)(!(version&gt;=2014.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.msv.verifier ;version=[2013.6.0,2014.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.msv.verifier.regexp)(version&gt;=2013.6.0)(!(version&gt;=2014.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.msv.verifier.regexp ;version=[2013.6.0,2014.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.msv.verifier.regexp.xmlschema)(version&gt;=2013.6.0)(!(version&gt;=2014.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.msv.verifier.regexp.xmlschema ;version=[2013.6.0,2014.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.events
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.util
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.stax2)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.stax2 ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.stax2.io)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.stax2.io ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.stax2.osgi)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.stax2.osgi ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.stax2.ri)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.stax2.ri ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.stax2.ri.dom)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.stax2.ri.dom ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.stax2.ri.evt)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.stax2.ri.evt ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.stax2.ri.typed)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.stax2.ri.typed ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.stax2.typed)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.stax2.typed ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.stax2.validation)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.codehaus.stax2.validation ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.relaxng.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.relaxng.datatype
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.ext
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='com.github.oxo42.stateless4j/2.5.0' md5='24cc7b4671ff7b3ac587e3b060198cfe' presentationname='stateless4j' sha256='e0a384fb31f8282f65f853dbc562724d57864ef19cb3087e5de90d8f70341146' symbolicname='com.github.oxo42.stateless4j' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.github.oxo42.stateless4j-2.5.0.jar' version='2.5.0'>
    <description>
      A fluent interface for state machines
    </description>
    <size>
      50371
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='stateless4j'/>
      <p n='symbolicname' v='com.github.oxo42.stateless4j'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.github.oxo42.stateless4j.conversion'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.github.oxo42.stateless4j.delegates'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.github.oxo42.stateless4j'/>
      <p n='uses' v='com.github.oxo42.stateless4j.delegates,com.github.oxo42.stateless4j.transitions,com.github.oxo42.stateless4j.triggers'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.github.oxo42.stateless4j.transitions'/>
      <p n='uses' v='com.github.oxo42.stateless4j,com.github.oxo42.stateless4j.delegates,com.github.oxo42.stateless4j.triggers'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.github.oxo42.stateless4j.triggers'/>
      <p n='uses' v='com.github.oxo42.stateless4j,com.github.oxo42.stateless4j.delegates'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='24cc7b4671ff7b3ac587e3b060198cfe'/>
      <p n='sha256' v='e0a384fb31f8282f65f853dbc562724d57864ef19cb3087e5de90d8f70341146'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j
    </require>
  </resource>
  <resource id='com.google.gson/2.7.0' md5='5134a2350f58890ffb9db0b40047195d' presentationname='Gson' sha256='2d43eb5ea9e133d2ee2405cc14f5ee08951b8361302fdd93494a3a997b508d32' symbolicname='com.google.gson' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.google.gson-2.7.0.jar' version='2.7.0'>
    <description>
      Gson JSON library
    </description>
    <size>
      231952
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Gson'/>
      <p n='symbolicname' v='com.google.gson'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.gson'/>
      <p n='uses' v='com.google.gson.reflect,com.google.gson.stream'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.gson.annotations'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.gson.reflect'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.gson.stream'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='5134a2350f58890ffb9db0b40047195d'/>
      <p n='sha256' v='2d43eb5ea9e133d2ee2405cc14f5ee08951b8361302fdd93494a3a997b508d32'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.google.gson.annotations)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package com.google.gson.annotations
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5)(ee=JavaSE-1.6)(ee=JavaSE-1.7)(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5)(ee=JavaSE-1.6)(ee=JavaSE-1.7)(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='com.googlecode.json-simple/1.1.1' md5='5cc2c478d73e8454b4c369cee66c5bc7' presentationname='JSON.simple' sha256='4e69696892b88b41c55d49ab2fdcc21eead92bf54acc588c0050596c3b75199c' symbolicname='com.googlecode.json-simple' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.googlecode.json-simple-1.1.1.jar' version='1.1.1'>
    <description>
      A simple Java toolkit for JSON
    </description>
    <size>
      23931
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JSON.simple'/>
      <p n='symbolicname' v='com.googlecode.json-simple'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.json.simple'/>
      <p n='uses' v='org.json.simple.parser'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.json.simple.parser'/>
      <p n='uses' v='org.json.simple'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='5cc2c478d73e8454b4c369cee66c5bc7'/>
      <p n='sha256' v='4e69696892b88b41c55d49ab2fdcc21eead92bf54acc588c0050596c3b75199c'/>
    </capability>
  </resource>
  <resource id='com.googlecode.plist.dd-plist/1.21.0' md5='83af13f8a34b909f51ade85212a1d213' presentationname='dd-plist' sha256='019c61abd93ecf614e3d214e9fed942dcf47d9d2d9548fe59d70f0840ba32fb6' symbolicname='com.googlecode.plist.dd-plist' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.googlecode.plist.dd-plist-1.21.0.jar' version='1.21.0'>
    <description>
      This library enables Java applications to work with property
       lists in various formats.Supported formats for reading and
       writing are OS X/iOS binary and XML property lists.ASCII property
       lists are also supported.The library also provides access
       to basic functions of NeXTSTEP/Cocoa classes likeNSDictionary,
       NSArray, etc.
    </description>
    <size>
      75654
    </size>
    <license>
      http://opensource.org/licenses/mit
    </license>
    <documentation>
      http://www.github.com/3breadt/dd-plist
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='dd-plist'/>
      <p n='symbolicname' v='com.googlecode.plist.dd-plist'/>
      <p n='version' t='version' v='1.21.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.dd.plist'/>
      <p n='uses' v='javax.xml.parsers,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='1.21.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='83af13f8a34b909f51ade85212a1d213'/>
      <p n='sha256' v='019c61abd93ecf614e3d214e9fed942dcf47d9d2d9548fe59d70f0840ba32fb6'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='com.signiant.interactivetransfer/10.6.0.59156' md5='d6bd6f9b151766f2baacce9065c17b9b' presentationname='Signiant Interactive Transfer' sha256='3018ad6e8010d8ba2df1054a64707259403e8ebad981926ec1ae931fb5a9f427' symbolicname='com.signiant.interactivetransfer' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.signiant.interactivetransfer-10.6.0.59156.jar' version='10.6.0.59156'>
    <size>
      1043782
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Signiant Interactive Transfer'/>
      <p n='symbolicname' v='com.signiant.interactivetransfer'/>
      <p n='version' t='version' v='10.6.0.59156'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.signiant.interactivetransfer.engine'/>
      <p n='uses' v='com.signiant.interactivetransfer.engine.exceptions,com.signiant.mobilize.ddsclient.connection,javax.crypto,javax.net.ssl'/>
      <p n='version' t='version' v='10.6.0.59156'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.signiant.interactivetransfer.engine.exceptions'/>
      <p n='uses' v='com.signiant.interactivetransfer.engine,javax.net.ssl'/>
      <p n='version' t='version' v='10.6.0.59156'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.signiant.mobilize.ddsclient.connection'/>
      <p n='uses' v='javax.net.ssl,com.signiant.interactivetransfer.engine.exceptions,sun.security.provider.certpath,javax.crypto'/>
      <p n='version' t='version' v='10.6.0.59156'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='d6bd6f9b151766f2baacce9065c17b9b'/>
      <p n='sha256' v='3018ad6e8010d8ba2df1054a64707259403e8ebad981926ec1ae931fb5a9f427'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.signiant.interactivetransfer.engine)(version&gt;=10.6.0))' multiple='false' name='package' optional='true'>
      Import package com.signiant.interactivetransfer.engine ;version=10.6.0
    </require>
    <require extend='false' filter='(&amp;(package=com.signiant.interactivetransfer.engine.exceptions)(version&gt;=10.6.0))' multiple='false' name='package' optional='true'>
      Import package com.signiant.interactivetransfer.engine.exceptions
       ;version=10.6.0
    </require>
    <require extend='false' filter='(&amp;(package=com.signiant.mobilize.ddsclient.connection)(version&gt;=10.6.0))' multiple='false' name='package' optional='true'>
      Import package com.signiant.mobilize.ddsclient.connection ;version=10.6.0
    </require>
    <require extend='false' filter='(&amp;(package=com.signiant.mobilize.ddsclient.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.signiant.mobilize.ddsclient.core
    </require>
    <require extend='false' filter='(&amp;(package=com.signiant.mobilize.ddsclient.core.exception)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.signiant.mobilize.ddsclient.core.exception
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.crypto.spec
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.x500)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.security.auth.x500
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.text)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.swing.text
    </require>
    <require extend='false' filter='(&amp;(package=junit.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package junit.framework
    </require>
    <require extend='false' filter='(&amp;(package=junit.textui)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package junit.textui
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j
    </require>
    <require extend='false' filter='(&amp;(package=sun.security.provider.certpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package sun.security.provider.certpath
    </require>
  </resource>
  <resource id='com.springsource.javax.media.jai.codec/1.1.3' md5='6993d54987b24036bcb81d97057d842f' presentationname='Java Advanced Image Codec' sha256='65e4673887a6938e05a6c31aeb23906da76fb4d5535a69913a4d5b6701927e01' symbolicname='com.springsource.javax.media.jai.codec' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.springsource.javax.media.jai.codec-1.1.3.jar' version='1.1.3'>
    <size>
      259959
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java Advanced Image Codec'/>
      <p n='symbolicname' v='com.springsource.javax.media.jai.codec'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.codec'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.codecimpl'/>
      <p n='uses' v='com.sun.image.codec.jpeg,com.sun.media.jai.codec'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.codecimpl.fpx'/>
      <p n='uses' v='com.sun.media.jai.codec'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.codecimpl.util'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='6993d54987b24036bcb81d97057d842f'/>
      <p n='sha256' v='65e4673887a6938e05a6c31aeb23906da76fb4d5535a69913a4d5b6701927e01'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.media.jai.util)(version&gt;=1.1.3)(version&lt;=1.1.3))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.jai.util ;version=[1.1.3,1.1.3]
    </require>
  </resource>
  <resource id='com.springsource.javax.media.jai.core/1.1.3' md5='678a0c1f71dd9c74fb5b2bbdec070dfc' presentationname='Java Advanced Image API Core' sha256='edb205ce0ae609e1b6e43e5786e2b6cbb6b6b407999a3395551f833efcfed9fd' symbolicname='com.springsource.javax.media.jai.core' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.springsource.javax.media.jai.core-1.1.3.jar' version='1.1.3'>
    <size>
      1914524
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java Advanced Image API Core'/>
      <p n='symbolicname' v='com.springsource.javax.media.jai.core'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.iterator'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.mlib'/>
      <p n='uses' v='com.sun.medialib.mlib,javax.media.jai,javax.media.jai.operator'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.opimage'/>
      <p n='uses' v='com.sun.image.codec.jpeg,javax.media.jai,javax.media.jai.operator,javax.media.jai.util'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.remote'/>
      <p n='uses' v='javax.media.jai'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.rmi'/>
      <p n='uses' v='javax.media.jai,javax.media.jai.remote,javax.media.jai.tilecodec'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.tilecodec'/>
      <p n='uses' v='javax.media.jai.remote,javax.media.jai.tilecodec'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.util'/>
      <p n='uses' v='javax.media.jai,javax.media.jai.util'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.media.jai.widget'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai'/>
      <p n='uses' v='javax.media.jai.util'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.iterator'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.operator'/>
      <p n='uses' v='com.sun.media.jai.codec,javax.media.jai,javax.media.jai.util'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.registry'/>
      <p n='uses' v='javax.media.jai,javax.media.jai.remote,javax.media.jai.tilecodec'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.remote'/>
      <p n='uses' v='javax.media.jai,javax.media.jai.tilecodec,javax.media.jai.util'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.tilecodec'/>
      <p n='uses' v='javax.media.jai,javax.media.jai.remote'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.util'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.media.jai.widget'/>
      <p n='version' t='version' v='1.1.3'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='678a0c1f71dd9c74fb5b2bbdec070dfc'/>
      <p n='sha256' v='edb205ce0ae609e1b6e43e5786e2b6cbb6b6b407999a3395551f833efcfed9fd'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.media.jai.codec)(version&gt;=1.1.3)(version&lt;=1.1.3))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.jai.codec ;version=[1.1.3,1.1.3]
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.media.jai.codecimpl.util)(version&gt;=1.1.3)(version&lt;=1.1.3))' multiple='false' name='package' optional='false'>
      Import package com.sun.media.jai.codecimpl.util ;version=[1.1.3,1.1.3]
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.medialib.mlib)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.medialib.mlib
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing
    </require>
  </resource>
  <resource id='com.sun.activation.javax.activation/1.2.0' md5='be7c430df50b330cffc4848a3abedbfb' presentationname='JavaBeans Activation Framework' sha256='993302b16cd7056f21e779cc577d175a810bb4900ef73cd8fbf2b50f928ba9ce' symbolicname='com.sun.activation.javax.activation' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.sun.activation.javax.activation-1.2.0.jar' version='1.2.0'>
    <description>
      JavaBeans Activation Framework
    </description>
    <size>
      78030
    </size>
    <license>
      https://github.com/javaee/activation/blob/master/LICENSE.txt
    </license>
    <documentation>
      http://www.oracle.com
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JavaBeans Activation Framework'/>
      <p n='symbolicname' v='com.sun.activation.javax.activation'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.activation'/>
      <p n='uses' v='com.sun.activation.registries'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.activation.viewers'/>
      <p n='uses' v='javax.activation'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.activation.registries'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='be7c430df50b330cffc4848a3abedbfb'/>
      <p n='sha256' v='993302b16cd7056f21e779cc577d175a810bb4900ef73cd8fbf2b50f928ba9ce'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.activation.registries)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.activation.registries ;version=1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.activation.viewers)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
      Import package com.sun.activation.viewers ;version=1.2.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=1.2.0))' multiple='false' name='package' optional='false'>
      Import package javax.activation ;version=1.2.0
    </require>
  </resource>
  <resource id='com.sun.istack.commons-runtime/3.0.7' md5='83e9617b86023b91bd54f65c09838f4b' presentationname='istack common utility code runtime' sha256='6443e10ba2e259fb821d9b6becf10db5316285fc30c53cec9d7b19a3877e7fdf' symbolicname='com.sun.istack.commons-runtime' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.sun.istack.commons-runtime-3.0.7.jar' version='3.0.7'>
    <description>
      istack common utility code
    </description>
    <size>
      25523
    </size>
    <license>
      https://glassfish.java.net/public/CDDL+GPL_1_1.html, https://glassfish.java.net/public/CDDL+GPL_1_1.html
    </license>
    <documentation>
      http://www.oracle.com/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='istack common utility code runtime'/>
      <p n='symbolicname' v='com.sun.istack.commons-runtime'/>
      <p n='version' t='version' v='3.0.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.istack'/>
      <p n='uses' v='javax.activation,javax.xml.stream,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='3.0.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.istack.localization'/>
      <p n='version' t='version' v='3.0.7'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.istack.logging'/>
      <p n='version' t='version' v='3.0.7'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='83e9617b86023b91bd54f65c09838f4b'/>
      <p n='sha256' v='6443e10ba2e259fb821d9b6becf10db5316285fc30c53cec9d7b19a3877e7fdf'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.activation
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='com.sun.xml.bind.jaxb-impl/2.3.1' md5='adee85f9825b054eaf876b6d659fe147' presentationname='Old JAXB Runtime' sha256='e6c9e0f1830fd5f7c30c25ecf5e2046c5668b06d304add89d2f027d5072297d0' symbolicname='com.sun.xml.bind.jaxb-impl' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/com.sun.xml.bind.jaxb-impl-2.3.1.jar' version='2.3.1'>
    <description>
      Old JAXB Runtime module. Contains sources required for runtime
       processing.
    </description>
    <size>
      1099204
    </size>
    <license>
      http://glassfish.java.net/public/CDDL+GPL_1_1.html
    </license>
    <documentation>
      http://www.oracle.com/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Old JAXB Runtime'/>
      <p n='symbolicname' v='com.sun.xml.bind.jaxb-impl'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind'/>
      <p n='uses' v='com.sun.xml.bind.v2.runtime.reflect,javax.xml.bind,javax.xml.bind.annotation.adapters,javax.xml.datatype,javax.xml.namespace,javax.xml.stream,org.xml.sax'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.annotation'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.api'/>
      <p n='uses' v='com.sun.xml.bind.v2.model.annotation,com.sun.xml.bind.v2.model.runtime,com.sun.xml.bind.v2.runtime,javax.xml.bind,javax.xml.bind.attachment,javax.xml.namespace,javax.xml.stream,javax.xml.transform,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.api.impl'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.marshaller'/>
      <p n='uses' v='javax.xml.parsers,org.w3c.dom,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.unmarshaller'/>
      <p n='uses' v='com.sun.xml.bind.v2.runtime.unmarshaller,javax.xml.bind,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.util'/>
      <p n='uses' v='com.sun.xml.bind,javax.xml.bind.helpers,org.xml.sax'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2'/>
      <p n='uses' v='com.sun.xml.bind.api,com.sun.xml.bind.v2.model.annotation,javax.xml.bind'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.bytecode'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.model.annotation'/>
      <p n='uses' v='com.sun.xml.bind.v2.model.core,com.sun.xml.bind.v2.model.nav,com.sun.xml.bind.v2.runtime'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.model.core'/>
      <p n='uses' v='com.sun.xml.bind.v2.model.annotation,com.sun.xml.bind.v2.model.impl,com.sun.xml.bind.v2.model.nav,com.sun.xml.bind.v2.runtime,javax.activation,javax.xml.bind,javax.xml.bind.annotation,javax.xml.bind.annotation.adapters,javax.xml.namespace,javax.xml.transform'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.model.impl'/>
      <p n='uses' v='com.sun.xml.bind.api,com.sun.xml.bind.v2.model.annotation,com.sun.xml.bind.v2.model.core,com.sun.xml.bind.v2.model.nav,com.sun.xml.bind.v2.model.runtime,com.sun.xml.bind.v2.runtime,javax.activation,javax.xml.namespace'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.model.nav'/>
      <p n='uses' v='com.sun.xml.bind.v2.runtime'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.model.runtime'/>
      <p n='uses' v='com.sun.xml.bind.v2.model.core,com.sun.xml.bind.v2.runtime,com.sun.xml.bind.v2.runtime.reflect,javax.xml.bind,javax.xml.namespace,org.xml.sax'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.model.util'/>
      <p n='uses' v='javax.xml.namespace'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.runtime'/>
      <p n='uses' v='com.sun.istack,com.sun.xml.bind.api,com.sun.xml.bind.marshaller,com.sun.xml.bind.v2.model.annotation,com.sun.xml.bind.v2.model.core,com.sun.xml.bind.v2.model.runtime,com.sun.xml.bind.v2.runtime.output,com.sun.xml.bind.v2.runtime.property,com.sun.xml.bind.v2.runtime.unmarshaller,javax.activation,javax.xml.bind,javax.xml.bind.annotation,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.bind.helpers,javax.xml.namespace,javax.xml.stream,javax.xml.transform,javax.xml.transform.sax,javax.xml.validation,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.runtime.output'/>
      <p n='uses' v='com.sun.xml.bind.marshaller,com.sun.xml.bind.v2.runtime,com.sun.xml.fastinfoset.stax,javax.xml.stream,org.jvnet.staxex,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.runtime.property'/>
      <p n='uses' v='com.sun.xml.bind.api,com.sun.xml.bind.v2.model.core,com.sun.xml.bind.v2.model.runtime,com.sun.xml.bind.v2.runtime,com.sun.xml.bind.v2.runtime.reflect,com.sun.xml.bind.v2.runtime.unmarshaller,com.sun.xml.bind.v2.util,javax.xml.namespace,javax.xml.stream,org.xml.sax'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.runtime.reflect'/>
      <p n='uses' v='com.sun.xml.bind.api,com.sun.xml.bind.v2.model.core,com.sun.xml.bind.v2.model.runtime,com.sun.xml.bind.v2.runtime,com.sun.xml.bind.v2.runtime.unmarshaller,javax.xml.bind,javax.xml.bind.annotation.adapters,javax.xml.stream,org.xml.sax'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.runtime.reflect.opt'/>
      <p n='uses' v='com.sun.xml.bind.api,com.sun.xml.bind.v2.runtime,com.sun.xml.bind.v2.runtime.reflect,javax.xml.stream,org.xml.sax'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.runtime.unmarshaller'/>
      <p n='uses' v='com.sun.xml.bind,com.sun.xml.bind.api,com.sun.xml.bind.unmarshaller,com.sun.xml.bind.util,com.sun.xml.bind.v2.model.core,com.sun.xml.bind.v2.runtime,com.sun.xml.bind.v2.runtime.output,com.sun.xml.bind.v2.runtime.reflect,javax.activation,javax.xml.bind,javax.xml.bind.annotation,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.bind.helpers,javax.xml.namespace,javax.xml.stream,javax.xml.transform,javax.xml.transform.sax,javax.xml.validation,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.schemagen'/>
      <p n='uses' v='com.sun.xml.bind.api,com.sun.xml.bind.v2.model.core,com.sun.xml.bind.v2.model.nav,com.sun.xml.txw2.output,javax.xml.bind,javax.xml.namespace'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.schemagen.episode'/>
      <p n='uses' v='com.sun.xml.txw2,com.sun.xml.txw2.annotation'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.schemagen.xmlschema'/>
      <p n='uses' v='com.sun.xml.txw2,com.sun.xml.txw2.annotation,javax.xml.namespace'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.sun.xml.bind.v2.util'/>
      <p n='uses' v='com.sun.xml.bind.v2.runtime,com.sun.xml.bind.v2.runtime.unmarshaller,javax.activation,javax.xml.namespace,javax.xml.parsers,javax.xml.transform,javax.xml.transform.stream,javax.xml.validation,javax.xml.xpath,org.xml.sax'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='adee85f9825b054eaf876b6d659fe147'/>
      <p n='sha256' v='e6c9e0f1830fd5f7c30c25ecf5e2046c5668b06d304add89d2f027d5072297d0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.istack)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.istack ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.annotation
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.api)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.api
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.api.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.api.impl
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.marshaller)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.marshaller
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.unmarshaller)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.unmarshaller
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.util
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.bytecode)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.bytecode
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.model.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.model.annotation
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.model.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.model.core
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.model.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.model.impl
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.model.nav)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.model.nav
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.model.runtime)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.model.runtime
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.model.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.model.util
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.runtime)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.runtime
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.runtime.output)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.runtime.output
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.runtime.property)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.runtime.property
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.runtime.reflect)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.runtime.reflect
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.runtime.unmarshaller)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.runtime.unmarshaller
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.schemagen)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.schemagen
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.schemagen.episode)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.schemagen.episode
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.schemagen.xmlschema)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.schemagen.xmlschema
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.bind.v2.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.bind.v2.util
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.fastinfoset.sax)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.fastinfoset.sax ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.fastinfoset.stax)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.fastinfoset.stax ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.txw2)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.txw2
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.txw2.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.txw2.annotation
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.xml.txw2.output)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.xml.txw2.output
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.activation ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.imageio.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.lang.model)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.lang.model
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation.adapters
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.attachment)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.attachment
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.helpers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.datatype
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.events
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.xpath
    </require>
    <require extend='false' filter='(&amp;(package=org.jvnet.fastinfoset)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jvnet.fastinfoset ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jvnet.staxex)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jvnet.staxex ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='jaxb-api/2.3.1' md5='bcf270d320f645ad19f5edb60091e87f' presentationname='jaxb-api' sha256='88b955a0df57880a26a74708bc34f74dcaf8ebf4e78843a28b50eae945732b06' symbolicname='jaxb-api' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/jaxb-api-2.3.1.jar' version='2.3.1'>
    <description>
      JAXB (JSR 222) API
    </description>
    <size>
      128076
    </size>
    <license>
      https://oss.oracle.com/licenses/CDDL+GPL-1.1, https://oss.oracle.com/licenses/CDDL+GPL-1.1
    </license>
    <documentation>
      http://www.oracle.com/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='jaxb-api'/>
      <p n='symbolicname' v='jaxb-api'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind'/>
      <p n='uses' v='javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.namespace,javax.xml.stream,javax.xml.transform,javax.xml.validation,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.annotation'/>
      <p n='uses' v='javax.xml.bind,javax.xml.parsers,javax.xml.transform,javax.xml.transform.dom,org.w3c.dom'/>
      <p n='version' t='version' v='2.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.annotation.adapters'/>
      <p n='version' t='version' v='2.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.attachment'/>
      <p n='uses' v='javax.activation'/>
      <p n='version' t='version' v='2.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.helpers'/>
      <p n='uses' v='javax.xml.bind,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.stream,javax.xml.transform,javax.xml.validation,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.util'/>
      <p n='uses' v='javax.xml.bind,javax.xml.transform.sax'/>
      <p n='version' t='version' v='2.3.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='bcf270d320f645ad19f5edb60091e87f'/>
      <p n='sha256' v='88b955a0df57880a26a74708bc34f74dcaf8ebf4e78843a28b50eae945732b06'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.activation
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation.adapters ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.attachment)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.attachment ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.datatype
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.ext
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.helpers)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.helpers ;version=[2.3.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.util)(version&gt;=2.3.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.util ;version=[2.3.0,3.0.0)
    </require>
  </resource>
  <resource id='json/20180130.0.0' md5='3d41378ea638eb427735b5d6e585ac0c' presentationname='JSON in Java' sha256='3eddf6d9d50e770650e62abe62885f4393aa911430ecde73ebafb1ffd2cfad16' symbolicname='json' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/json-20180130.0.0.jar' version='20180130.0.0'>
    <description>
      JSON is a light-weight, language independent, data interchange
       format.		See http://www.JSON.org/		The files in this package
       implement JSON encoders/decoders in Java.		It also includes
       the capability to convert between JSON and XML, HTTP		headers,
       Cookies, and CDL.		This is a reference implementation. There
       is a large number of JSON packages		in Java. Perhaps someday
       the Java community will standardize on one. Until		then, choose
       carefully.		The license includes this restriction: "The software
       shall be used for good,		not evil." If your conscience cannot
       live with that, then choose a different		package.
    </description>
    <size>
      62116
    </size>
    <license>
      http://json.org/license.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JSON in Java'/>
      <p n='symbolicname' v='json'/>
      <p n='version' t='version' v='20180130.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.json'/>
      <p n='version' t='version' v='20180130.0.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='3d41378ea638eb427735b5d6e585ac0c'/>
      <p n='sha256' v='3eddf6d9d50e770650e62abe62885f4393aa911430ecde73ebafb1ffd2cfad16'/>
    </capability>
  </resource>
  <resource id='org.apache.commons.cli/1.4.0' md5='c966d7e03507c834d5b09b848560174e' presentationname='Apache Commons CLI' sha256='fd3c7c9545a9cdb2051d1f9155c4f76b1e4ac5a57304404a6eedb578ffba7328' symbolicname='org.apache.commons.cli' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.commons.cli-1.4.0.jar' version='1.4.0'>
    <description>
      Apache Commons CLI provides a simple API for presenting, processing
       and validating a command line interface.
    </description>
    <size>
      53820
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/proper/commons-cli/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons CLI'/>
      <p n='symbolicname' v='org.apache.commons.cli'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.cli'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='c966d7e03507c834d5b09b848560174e'/>
      <p n='sha256' v='fd3c7c9545a9cdb2051d1f9155c4f76b1e4ac5a57304404a6eedb578ffba7328'/>
    </capability>
  </resource>
  <resource id='org.apache.commons.collections/3.2.2' md5='f54a8510f834a1a57166970bfc982e94' presentationname='Apache Commons Collections' sha256='eeeae917917144a68a741d4c0dff66aa5c5c5fd85593ff217bced3fc8ca783b8' symbolicname='org.apache.commons.collections' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.commons.collections-3.2.2.jar' version='3.2.2'>
    <description>
      Types that extend and augment the Java Collections Framework.
    </description>
    <size>
      588337
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/collections/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons Collections'/>
      <p n='symbolicname' v='org.apache.commons.collections'/>
      <p n='version' t='version' v='3.2.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections'/>
      <p n='version' t='version' v='3.2.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.bag'/>
      <p n='version' t='version' v='3.2.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.bidimap'/>
      <p n='version' t='version' v='3.2.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.buffer'/>
      <p n='version' t='version' v='3.2.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.collection'/>
      <p n='version' t='version' v='3.2.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.comparators'/>
      <p n='version' t='version' v='3.2.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.functors'/>
      <p n='version' t='version' v='3.2.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.iterators'/>
      <p n='version' t='version' v='3.2.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.keyvalue'/>
      <p n='version' t='version' v='3.2.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.list'/>
      <p n='version' t='version' v='3.2.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.map'/>
      <p n='version' t='version' v='3.2.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.collections.set'/>
      <p n='version' t='version' v='3.2.2'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='f54a8510f834a1a57166970bfc982e94'/>
      <p n='sha256' v='eeeae917917144a68a741d4c0dff66aa5c5c5fd85593ff217bced3fc8ca783b8'/>
    </capability>
  </resource>
  <resource id='org.apache.commons.commons-beanutils/1.9.4' md5='07dc532ee316fe1f2f0323e9bd2f8df4' presentationname='Apache Commons BeanUtils' sha256='7d938c81789028045c08c065e94be75fc280527620d5bd62b519d5838532368a' symbolicname='org.apache.commons.commons-beanutils' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.commons.commons-beanutils-1.9.4.jar' version='1.9.4'>
    <description>
      Apache Commons BeanUtils provides an easy-to-use but flexible
       wrapper around reflection and introspection.
    </description>
    <size>
      246918
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      https://commons.apache.org/proper/commons-beanutils/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons BeanUtils'/>
      <p n='symbolicname' v='org.apache.commons.commons-beanutils'/>
      <p n='version' t='version' v='1.9.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.beanutils'/>
      <p n='version' t='version' v='1.9.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.beanutils.converters'/>
      <p n='version' t='version' v='1.9.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.beanutils.expression'/>
      <p n='version' t='version' v='1.9.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.beanutils.locale'/>
      <p n='version' t='version' v='1.9.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.beanutils.locale.converters'/>
      <p n='version' t='version' v='1.9.4'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='07dc532ee316fe1f2f0323e9bd2f8df4'/>
      <p n='sha256' v='7d938c81789028045c08c065e94be75fc280527620d5bd62b519d5838532368a'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.comparators)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.comparators
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections.keyvalue)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.collections.keyvalue
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging
    </require>
  </resource>
  <resource id='org.apache.commons.commons-codec/1.14.0' md5='e9158e0983096d3df09236f7b53125aa' presentationname='Apache Commons Codec' sha256='a128e4f93fabe5381ded64cf2873019e06030b718eb43ceeae0b0e5d17ad33e9' symbolicname='org.apache.commons.commons-codec' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.commons.commons-codec-1.14.0.jar' version='1.14.0'>
    <description>
      The Apache Commons Codec package contains simple encoder and
       decoders for     various formats such as Base64 and Hexadecimal.
        In addition to these     widely used encoders and decoders,
       the codec package also maintains a     collection of phonetic
       encoding utilities.
    </description>
    <size>
      347669
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      https://commons.apache.org/proper/commons-codec/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons Codec'/>
      <p n='symbolicname' v='org.apache.commons.commons-codec'/>
      <p n='version' t='version' v='1.14.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec'/>
      <p n='version' t='version' v='1.14.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.binary'/>
      <p n='version' t='version' v='1.14.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.cli'/>
      <p n='version' t='version' v='1.14.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.digest'/>
      <p n='version' t='version' v='1.14.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.language'/>
      <p n='version' t='version' v='1.14.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.language.bm'/>
      <p n='version' t='version' v='1.14.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.codec.net'/>
      <p n='version' t='version' v='1.14.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='e9158e0983096d3df09236f7b53125aa'/>
      <p n='sha256' v='a128e4f93fabe5381ded64cf2873019e06030b718eb43ceeae0b0e5d17ad33e9'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto.spec
    </require>
  </resource>
  <resource id='org.apache.commons.commons-compress/1.20.0' md5='3f7237fb56029591b5bdd2698c196220' presentationname='Apache Commons Compress' sha256='0aeb625c948c697ea7b205156e112363b59ed5e2551212cd4e460bdb72c7c06e' symbolicname='org.apache.commons.commons-compress' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.commons.commons-compress-1.20.0.jar' version='1.20.0'>
    <description>
      Apache Commons Compress software defines an API for working
       withcompression and archive formats.  These include: bzip2,
       gzip, pack200,lzma, xz, Snappy, traditional Unix Compress,
       DEFLATE, DEFLATE64, LZ4,Brotli, Zstandard and ar, cpio, jar,
       tar, zip, dump, 7z, arj.
    </description>
    <size>
      632424
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      https://commons.apache.org/proper/commons-compress/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons Compress'/>
      <p n='symbolicname' v='org.apache.commons.commons-compress'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.archivers'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.archivers.ar'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.archivers.arj'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.archivers.cpio'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.archivers.dump'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.archivers.examples'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.archivers.jar'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.archivers.sevenz'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.archivers.tar'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.archivers.zip'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.changes'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.brotli'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.bzip2'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.deflate'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.deflate64'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.gzip'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.lz4'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.lz77support'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.lzma'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.lzw'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.pack200'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.snappy'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.xz'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.z'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.compressors.zstandard'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.parallel'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.compress.utils'/>
      <p n='version' t='version' v='1.20.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='3f7237fb56029591b5bdd2698c196220'/>
      <p n='sha256' v='0aeb625c948c697ea7b205156e112363b59ed5e2551212cd4e460bdb72c7c06e'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.tukaani.xz)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.tukaani.xz
    </require>
    <require extend='false' filter='(&amp;(package=org.brotli.dec)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.brotli.dec
    </require>
    <require extend='false' filter='(&amp;(package=com.github.luben.zstd)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.github.luben.zstd
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.crypto.spec
    </require>
  </resource>
  <resource id='org.apache.commons.commons-io/2.7.0' md5='87709c85b69a685ddba69c65fe6dd6f9' presentationname='Apache Commons IO' sha256='4547858fff38bbf15262d520685b184a3dce96897bc1844871f055b96e8f6e95' symbolicname='org.apache.commons.commons-io' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.commons.commons-io-2.7.0.jar' version='2.7.0'>
    <description>
      The Apache Commons IO library contains utility classes, stream
       implementations, file filters,file comparators, endian transformation
       classes, and much more.
    </description>
    <size>
      276413
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      https://commons.apache.org/proper/commons-io/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons IO'/>
      <p n='symbolicname' v='org.apache.commons.commons-io'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io'/>
      <p n='version' t='version' v='1.4.9999'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.comparator'/>
      <p n='version' t='version' v='1.4.9999'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.filefilter'/>
      <p n='version' t='version' v='1.4.9999'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.input'/>
      <p n='version' t='version' v='1.4.9999'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.output'/>
      <p n='version' t='version' v='1.4.9999'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.file'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.function'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.input.buffer'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.monitor'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.serialization'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.comparator'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.filefilter'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.input'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.io.output'/>
      <p n='version' t='version' v='2.7.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='87709c85b69a685ddba69c65fe6dd6f9'/>
      <p n='sha256' v='4547858fff38bbf15262d520685b184a3dce96897bc1844871f055b96e8f6e95'/>
    </capability>
  </resource>
  <resource id='org.apache.commons.exec/1.3.0' md5='8bb8fa2edfd60d5c7ed6bf9923d14aa8' presentationname='Apache Commons Exec' sha256='cb49812dc1bfb0ea4f20f398bcae1a88c6406e213e67f7524fb10d4f8ad9347b' symbolicname='org.apache.commons.exec' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.commons.exec-1.3.0.jar' version='1.3.0'>
    <description>
      Apache Commons Exec is a library to reliably execute external
       processes from within the JVM.
    </description>
    <size>
      54423
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/proper/commons-exec/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons Exec'/>
      <p n='symbolicname' v='org.apache.commons.exec'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.exec'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.exec.environment'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.exec.launcher'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.exec.util'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='8bb8fa2edfd60d5c7ed6bf9923d14aa8'/>
      <p n='sha256' v='cb49812dc1bfb0ea4f20f398bcae1a88c6406e213e67f7524fb10d4f8ad9347b'/>
    </capability>
  </resource>
  <resource id='org.apache.commons.lang/2.6.0' md5='4d5c1693079575b362edf41500630bbd' presentationname='Commons Lang' sha256='50f11b09f877c294d56f24463f47d28f929cf5044f648661c0f0cfbae9a2f49c' symbolicname='org.apache.commons.lang' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.commons.lang-2.6.jar' version='2.6.0'>
    <description>
      Commons Lang, a package of Java utility classes for the   
           classes that are in java.lang's hierarchy, or are considered
       to be so        standard as to justify existence in java.lang.
    </description>
    <size>
      284220
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/lang/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons Lang'/>
      <p n='symbolicname' v='org.apache.commons.lang'/>
      <p n='version' t='version' v='2.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.enum'/>
      <p n='version' t='version' v='2.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.enums'/>
      <p n='version' t='version' v='2.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.builder'/>
      <p n='version' t='version' v='2.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.time'/>
      <p n='version' t='version' v='2.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.exception'/>
      <p n='version' t='version' v='2.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.mutable'/>
      <p n='version' t='version' v='2.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.text'/>
      <p n='version' t='version' v='2.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.reflect'/>
      <p n='version' t='version' v='2.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang.math'/>
      <p n='version' t='version' v='2.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang'/>
      <p n='version' t='version' v='2.6.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='4d5c1693079575b362edf41500630bbd'/>
      <p n='sha256' v='50f11b09f877c294d56f24463f47d28f929cf5044f648661c0f0cfbae9a2f49c'/>
    </capability>
  </resource>
  <resource id='org.apache.commons.lang3/3.10.0' md5='238dcae7363dd86b2e515a2a29e8b4d9' presentationname='Apache Commons Lang' sha256='28968ae55fff465494083aeba856f8824c34902329882bf61e77246a91e25aa9' symbolicname='org.apache.commons.lang3' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.commons.lang3-3.10.0.jar' version='3.10.0'>
    <description>
      Apache Commons Lang, a package of Java utility classes for
       the  classes that are in java.lang's hierarchy, or are considered
       to be so  standard as to justify existence in java.lang.
    </description>
    <size>
      523372
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      https://commons.apache.org/proper/commons-lang/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons Lang'/>
      <p n='symbolicname' v='org.apache.commons.lang3'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3.arch'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3.builder'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3.compare'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3.concurrent'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3.event'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3.exception'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3.math'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3.mutable'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3.reflect'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3.text'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3.text.translate'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3.time'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.lang3.tuple'/>
      <p n='version' t='version' v='3.10.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='238dcae7363dd86b2e515a2a29e8b4d9'/>
      <p n='sha256' v='28968ae55fff465494083aeba856f8824c34902329882bf61e77246a91e25aa9'/>
    </capability>
  </resource>
  <resource id='org.apache.commons.logging/1.2.0' md5='040b4b4d8eac886f6b4a2a3bd2f31b00' presentationname='Apache Commons Logging' sha256='daddea1ea0be0f56978ab3006b8ac92834afeefbd9b7e4e6316fca57df0fa636' symbolicname='org.apache.commons.logging' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.commons.logging-1.2.0.jar' version='1.2.0'>
    <description>
      Apache Commons Logging is a thin adapter allowing configurable
       bridging to other,    well known logging systems.
    </description>
    <size>
      61829
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/proper/commons-logging/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons Logging'/>
      <p n='symbolicname' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.logging.impl'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='040b4b4d8eac886f6b4a2a3bd2f31b00'/>
      <p n='sha256' v='daddea1ea0be0f56978ab3006b8ac92834afeefbd9b7e4e6316fca57df0fa636'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.avalon.framework.logger)(version&gt;=4.1.3)(version&lt;=4.1.5))' multiple='false' name='package' optional='true'>
      Import package org.apache.avalon.framework.logger ;version=[4.1.3,4.1.5]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log)(version&gt;=1.0.1)(version&lt;=1.0.1))' multiple='false' name='package' optional='true'>
      Import package org.apache.log ;version=[1.0.1,1.0.1]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j ;version=[1.2.15,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.commons.math/2.2.0' md5='4b65633769a2d3c532c86188648bb380' presentationname='Commons Math' sha256='15993bb2a3cf50f3291b40fc980a3166a0984e7b5f1abbe5232151fd94954584' symbolicname='org.apache.commons.math' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.commons.math-2.2.jar' version='2.2.0'>
    <description>
      The Math project is a library of lightweight, self-contained
       mathematics and statistics components addressing the most
       common practical problems not immediately available in the
       Java programming language or commons-lang.
    </description>
    <size>
      988514
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/math/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Commons Math'/>
      <p n='symbolicname' v='org.apache.commons.math'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.analysis.interpolation'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.dfp'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.special'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.util'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.analysis'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.descriptive'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.regression'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.correlation'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.clustering'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.ode.jacobians'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.ranking'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.ode.sampling'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.genetics'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.analysis.polynomials'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.exception.util'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.optimization.linear'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.ode.nonstiff'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.optimization.univariate'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.optimization.direct'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.optimization.general'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.distribution'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.ode.events'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.descriptive.summary'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.geometry'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.linear'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.estimation'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.analysis.integration'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.descriptive.rank'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.random'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.fraction'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.complex'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.transform'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.inference'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.optimization.fitting'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.exception'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.optimization'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.ode'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.stat.descriptive.moment'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.math.analysis.solvers'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='4b65633769a2d3c532c86188648bb380'/>
      <p n='sha256' v='15993bb2a3cf50f3291b40fc980a3166a0984e7b5f1abbe5232151fd94954584'/>
    </capability>
  </resource>
  <resource id='org.apache.commons.text/1.1.0' md5='c61a3e653333acccfe8be0ed3492cafc' presentationname='Apache Commons Text' sha256='0149a81b421e646646d8724e0500f71264893c790aa2a771c056a1e984f02434' symbolicname='org.apache.commons.text' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.commons.text-1.1.0.jar' version='1.1.0'>
    <description>
      Apache Commons Text is a library focused on algorithms working
       on strings.
    </description>
    <size>
      129145
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://commons.apache.org/proper/commons-text/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Commons Text'/>
      <p n='symbolicname' v='org.apache.commons.text'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.text'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.text.diff'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.text.similarity'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.commons.text.translate'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='c61a3e653333acccfe8be0ed3492cafc'/>
      <p n='sha256' v='0149a81b421e646646d8724e0500f71264893c790aa2a771c056a1e984f02434'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang3)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.lang3
    </require>
  </resource>
  <resource id='org.apache.felix.bundlerepository/2.0.10' md5='d2ad496076e651a0b15784fa0aaa42c6' presentationname='Apache Felix Bundle Repository' sha256='2605f958f6a36186637f0e6d9fbc6e8991e878c6a6e535f4516e44ec1c639f29' symbolicname='org.apache.felix.bundlerepository' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.felix.bundlerepository-2.0.10.jar' version='2.0.10'>
    <description>
      Bundle repository service.
    </description>
    <size>
      237308
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://felix.apache.org/site/apache-felix-osgi-bundle-repository.html
    </documentation>
    <source>
      http://felix.apache.org/site/downloads.cgi
    </source>
    <capability name='service'>
      <p n='service' v='org.apache.felix.bundlerepository.RepositoryAdmin'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.osgi.service.obr.RepositoryAdmin'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Bundle Repository'/>
      <p n='symbolicname' v='org.apache.felix.bundlerepository'/>
      <p n='version' t='version' v='2.0.10'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.repository'/>
      <p n='uses' v='org.osgi.resource'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.bundlerepository'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='d2ad496076e651a0b15784fa0aaa42c6'/>
      <p n='sha256' v='2605f958f6a36186637f0e6d9fbc6e8991e878c6a6e535f4516e44ec1c639f29'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.service.repository)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.repository ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.obr)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.obr ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.shell)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.felix.shell ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.felix.service.command ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.bundlerepository)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.bundlerepository ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.wiring ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.resource)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.resource ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.cm ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.url)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.url ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.felix.configadmin/1.9.10' md5='daea443ea48cf4a7e33fffb56ef7726a' presentationname='Apache Felix Configuration Admin Service' sha256='77b03b938e796c0512d9ad89acf287cce09c14a159ca05b6cb74dda17e7ab3fa' symbolicname='org.apache.felix.configadmin' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.felix.configadmin-1.9.10.jar' version='1.9.10'>
    <description>
      Implementation of the OSGi Configuration Admin Service Specification
       1.6
    </description>
    <size>
      155630
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://felix.apache.org/site/apache-felix-config-admin.html
    </documentation>
    <category id='osgi'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Configuration Admin Service'/>
      <p n='symbolicname' v='org.apache.felix.configadmin'/>
      <p n='version' t='version' v='1.9.10'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.cm'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.cm.file'/>
      <p n='uses' v='org.apache.felix.cm,org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.cm'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='daea443ea48cf4a7e33fffb56ef7726a'/>
      <p n='sha256' v='77b03b938e796c0512d9ad89acf287cce09c14a159ca05b6cb74dda17e7ab3fa'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.6.0)(!(version&gt;=1.7.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.6.0,1.7.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.coordinator)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.coordinator ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.cm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.cm ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.cm.file)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.cm.file ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.felix.main/6.0.1' md5='deacc08e1bcd45c8e092f88811f97b18' presentationname='Apache Felix' sha256='75928ccbe8ec49b2240d4ef9e8ec3d70a5ce0265277597f2382fc1e22f0574b3' symbolicname='org.apache.felix.main' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.felix.main-6.0.1.jar' version='6.0.1'>
    <description>
      OSGi R6 framework.
    </description>
    <size>
      738783
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      https://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix'/>
      <p n='symbolicname' v='org.apache.felix.main'/>
      <p n='version' t='version' v='6.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.dto'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.dto'/>
      <p n='uses' v='org.osgi.dto'/>
      <p n='version' t='version' v='1.8.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.bundle'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.resolver'/>
      <p n='uses' v='org.osgi.framework.wiring'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.service'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.weaving'/>
      <p n='uses' v='org.osgi.framework.wiring'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.launch'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.namespace'/>
      <p n='uses' v='org.osgi.resource'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.startlevel'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.startlevel.dto'/>
      <p n='uses' v='org.osgi.dto'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.wiring'/>
      <p n='uses' v='org.osgi.framework,org.osgi.resource'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.wiring.dto'/>
      <p n='uses' v='org.osgi.dto,org.osgi.resource.dto'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.resource'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.resource.dto'/>
      <p n='uses' v='org.osgi.dto'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.packageadmin'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.resolver'/>
      <p n='uses' v='org.osgi.resource'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.startlevel'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.url'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.tracker'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.5.2'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='deacc08e1bcd45c8e092f88811f97b18'/>
      <p n='sha256' v='75928ccbe8ec49b2240d4ef9e8ec3d70a5ce0265277597f2382fc1e22f0574b3'/>
    </capability>
  </resource>
  <resource id='org.apache.felix.scr/2.1.20' md5='2c5141284e0401601447b35970b021d8' presentationname='Apache Felix Declarative Services' sha256='4e35b3a8e7b65c7b46dafc3bd9c6c384b95ba40b1c664abbf293272f6213b21d' symbolicname='org.apache.felix.scr' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.felix.scr-2.1.20.jar' version='2.1.20'>
    <description>
      Implementation of the Declarative Services specification 1.4
    </description>
    <size>
      399473
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://felix.apache.org/site/apache-felix-service-component-runtime.html
    </documentation>
    <category id='osgi'/>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Felix Declarative Services'/>
      <p n='symbolicname' v='org.apache.felix.scr'/>
      <p n='version' t='version' v='2.1.20'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.scr.component'/>
      <p n='uses' v='org.osgi.service.component'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.felix.scr.info'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.component'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.component.runtime'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.component.runtime.dto,org.osgi.util.promise'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.component.runtime.dto'/>
      <p n='uses' v='org.osgi.dto,org.osgi.framework.dto'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='2c5141284e0401601447b35970b021d8'/>
      <p n='sha256' v='4e35b3a8e7b65c7b46dafc3bd9c6c384b95ba40b1c664abbf293272f6213b21d'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.cm ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.metatype)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.metatype ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.packageadmin)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.packageadmin ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.service.command)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.felix.service.command ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.scr.component)(version&gt;=1.1.0)(!(version&gt;=1.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.scr.component ;version=[1.1.0,1.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.felix.scr.info)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.felix.scr.info ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.dto)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.dto ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.dto)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.dto ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.startlevel)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.startlevel ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.wiring ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component)(version&gt;=1.4.0)(!(version&gt;=1.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component ;version=[1.4.0,1.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component.runtime)(version&gt;=1.4.0)(!(version&gt;=1.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component.runtime ;version=[1.4.0,1.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.component.runtime.dto)(version&gt;=1.4.0)(!(version&gt;=1.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.component.runtime.dto ;version=[1.4.0,1.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.promise)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.promise ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='org.apache.httpcomponents.httpclient/4.5.12' md5='fb9c77f65940aeaa3899202c09be2132' presentationname='Apache Apache HttpClient OSGi bundle' sha256='7ed79f91c18a18a478569e205975fdf37c6bc29142f825d005037e497bca7af7' symbolicname='org.apache.httpcomponents.httpclient' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.httpcomponents.httpclient-4.5.12.jar' version='4.5.12'>
    <description>
      Apache HttpComponents Client (OSGi bundle)
    </description>
    <size>
      1368597
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Apache HttpClient OSGi bundle'/>
      <p n='symbolicname' v='org.apache.httpcomponents.httpclient'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.auth'/>
      <p n='uses' v='org.apache.http,org.apache.http.config,org.apache.http.params,org.apache.http.protocol,org.ietf.jgss'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.auth.params'/>
      <p n='uses' v='org.apache.http.params'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.cookie'/>
      <p n='uses' v='org.apache.http,org.apache.http.config,org.apache.http.params,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.cookie.params'/>
      <p n='uses' v='org.apache.http.params'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn'/>
      <p n='uses' v='javax.net.ssl,org.apache.http,org.apache.http.concurrent,org.apache.http.config,org.apache.http.conn.routing,org.apache.http.conn.scheme,org.apache.http.entity,org.apache.http.params,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn.params'/>
      <p n='uses' v='org.apache.http,org.apache.http.conn.routing,org.apache.http.params'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn.routing'/>
      <p n='uses' v='org.apache.http,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn.scheme'/>
      <p n='uses' v='org.apache.http,org.apache.http.conn,org.apache.http.params'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn.socket'/>
      <p n='uses' v='org.apache.http,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn.ssl'/>
      <p n='uses' v='javax.net.ssl,org.apache.http,org.apache.http.conn,org.apache.http.conn.scheme,org.apache.http.conn.socket,org.apache.http.conn.util,org.apache.http.params,org.apache.http.protocol,org.apache.http.ssl'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.conn.util'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client'/>
      <p n='uses' v='org.apache.http,org.apache.http.auth,org.apache.http.client.methods,org.apache.http.conn,org.apache.http.conn.routing,org.apache.http.cookie,org.apache.http.params,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.cache'/>
      <p n='uses' v='org.apache.http,org.apache.http.client.protocol,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.config'/>
      <p n='uses' v='org.apache.http'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.entity'/>
      <p n='uses' v='org.apache.http,org.apache.http.entity'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.fluent'/>
      <p n='uses' v='org.apache.http,org.apache.http.auth,org.apache.http.client,org.apache.http.concurrent,org.apache.http.conn.scheme,org.apache.http.entity,org.apache.http.impl.client'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.methods'/>
      <p n='uses' v='org.apache.http,org.apache.http.client.config,org.apache.http.concurrent,org.apache.http.conn,org.apache.http.message,org.apache.http.params'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.params'/>
      <p n='uses' v='org.apache.http,org.apache.http.auth.params,org.apache.http.client.config,org.apache.http.conn.params,org.apache.http.cookie.params,org.apache.http.params'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.protocol'/>
      <p n='uses' v='org.apache.http,org.apache.http.auth,org.apache.http.client,org.apache.http.client.config,org.apache.http.client.entity,org.apache.http.config,org.apache.http.conn.routing,org.apache.http.cookie,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.client.utils'/>
      <p n='uses' v='org.apache.http,org.apache.http.client,org.apache.http.client.methods,org.apache.http.conn.routing,org.apache.http.util'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.entity.mime'/>
      <p n='uses' v='org.apache.http,org.apache.http.entity,org.apache.http.entity.mime.content'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.entity.mime.content'/>
      <p n='uses' v='org.apache.http.entity'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.auth'/>
      <p n='uses' v='org.apache.commons.logging,org.apache.http,org.apache.http.auth,org.apache.http.client,org.apache.http.params,org.apache.http.protocol,org.apache.http.util,org.ietf.jgss'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.cookie'/>
      <p n='uses' v='org.apache.http,org.apache.http.conn.util,org.apache.http.cookie,org.apache.http.message,org.apache.http.params,org.apache.http.protocol,org.apache.http.util'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.conn'/>
      <p n='uses' v='javax.net.ssl,org.apache.commons.logging,org.apache.http,org.apache.http.config,org.apache.http.conn,org.apache.http.conn.routing,org.apache.http.conn.scheme,org.apache.http.conn.socket,org.apache.http.entity,org.apache.http.impl,org.apache.http.impl.io,org.apache.http.io,org.apache.http.message,org.apache.http.params,org.apache.http.pool,org.apache.http.protocol,org.apache.http.util'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.conn.tsccm'/>
      <p n='uses' v='org.apache.http.conn,org.apache.http.conn.params,org.apache.http.conn.routing,org.apache.http.conn.scheme,org.apache.http.impl.conn,org.apache.http.params'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.execchain'/>
      <p n='uses' v='org.apache.http,org.apache.http.client,org.apache.http.client.methods,org.apache.http.client.protocol,org.apache.http.conn,org.apache.http.conn.routing,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.client'/>
      <p n='uses' v='javax.net.ssl,org.apache.commons.logging,org.apache.http,org.apache.http.auth,org.apache.http.client,org.apache.http.client.config,org.apache.http.client.entity,org.apache.http.client.methods,org.apache.http.concurrent,org.apache.http.config,org.apache.http.conn,org.apache.http.conn.routing,org.apache.http.conn.socket,org.apache.http.conn.ssl,org.apache.http.conn.util,org.apache.http.cookie,org.apache.http.impl,org.apache.http.impl.auth,org.apache.http.impl.execchain,org.apache.http.message,org.apache.http.params,org.apache.http.pool,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.client.cache'/>
      <p n='uses' v='org.apache.http,org.apache.http.client,org.apache.http.client.cache,org.apache.http.client.methods,org.apache.http.client.protocol,org.apache.http.conn,org.apache.http.conn.routing,org.apache.http.impl.client,org.apache.http.impl.execchain,org.apache.http.params,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.client.cache.ehcache'/>
      <p n='uses' v='net.sf.ehcache,org.apache.http.client.cache,org.apache.http.impl.client.cache'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.client.cache.memcached'/>
      <p n='uses' v='net.spy.memcached,org.apache.http.client.cache,org.apache.http.impl.client.cache'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.osgi.services'/>
      <p n='uses' v='org.apache.http.impl.client,org.apache.http.impl.client.cache'/>
      <p n='version' t='version' v='4.5.12'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='fb9c77f65940aeaa3899202c09be2132'/>
      <p n='sha256' v='7ed79f91c18a18a478569e205975fdf37c6bc29142f825d005037e497bca7af7'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto.spec
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.directory
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.ldap)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.ldap
    </require>
    <require extend='false' filter='(&amp;(package=javax.net)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.x500)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.x500
    </require>
    <require extend='false' filter='(&amp;(package=org.ietf.jgss)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.ietf.jgss
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.0)(!(version&gt;=1.3.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.0,1.3.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.config)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.config ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.concurrent)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.concurrent ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.entity)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.entity ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.io)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.io ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.message)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.message ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.params)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.params ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.pool)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.pool ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.protocol)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.protocol ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.ssl)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.ssl ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.util)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.util ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.entity)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.entity ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.io)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.io ;version=[4.4.0,4.5.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache
    </require>
    <require extend='false' filter='(&amp;(package=net.spy.memcached)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package net.spy.memcached
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.pool)(version&gt;=4.4.0)(!(version&gt;=4.5.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.pool ;version=[4.4.0,4.5.0)
    </require>
  </resource>
  <resource id='org.apache.httpcomponents.httpcore/4.4.13' md5='f49dc09541ae924875e3061403d48b80' presentationname='Apache Apache HttpCore OSGi bundle' sha256='d31988d21bc3433d7b8841e86e1b9971b99d36fa0e84c03a32e129b033933fa0' symbolicname='org.apache.httpcomponents.httpcore' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.httpcomponents.httpcore-4.4.13.jar' version='4.4.13'>
    <description>
      Apache HttpComponents Core (OSGi bundle)
    </description>
    <size>
      696255
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Apache HttpCore OSGi bundle'/>
      <p n='symbolicname' v='org.apache.httpcomponents.httpcore'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http'/>
      <p n='uses' v='org.apache.http.params,org.apache.http.protocol,org.apache.http.util'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.annotation'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.concurrent'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.config'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.entity'/>
      <p n='uses' v='org.apache.http'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl'/>
      <p n='uses' v='org.apache.http,org.apache.http.config,org.apache.http.entity,org.apache.http.impl.entity,org.apache.http.io,org.apache.http.params,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.bootstrap'/>
      <p n='uses' v='javax.net,javax.net.ssl,org.apache.http,org.apache.http.config,org.apache.http.impl,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.entity'/>
      <p n='uses' v='org.apache.http,org.apache.http.entity,org.apache.http.io'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.io'/>
      <p n='uses' v='org.apache.http,org.apache.http.config,org.apache.http.io,org.apache.http.message,org.apache.http.params,org.apache.http.util'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.nio'/>
      <p n='uses' v='javax.net.ssl,org.apache.http,org.apache.http.config,org.apache.http.entity,org.apache.http.impl,org.apache.http.impl.io,org.apache.http.impl.nio.reactor,org.apache.http.io,org.apache.http.nio,org.apache.http.nio.reactor,org.apache.http.nio.reactor.ssl,org.apache.http.nio.util,org.apache.http.params,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.nio.bootstrap'/>
      <p n='uses' v='javax.net.ssl,org.apache.http,org.apache.http.config,org.apache.http.impl.nio,org.apache.http.impl.nio.reactor,org.apache.http.nio,org.apache.http.nio.protocol,org.apache.http.nio.reactor,org.apache.http.nio.reactor.ssl,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.nio.codecs'/>
      <p n='uses' v='org.apache.http,org.apache.http.config,org.apache.http.impl.io,org.apache.http.message,org.apache.http.nio,org.apache.http.nio.reactor,org.apache.http.params,org.apache.http.util'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.nio.pool'/>
      <p n='uses' v='javax.net.ssl,org.apache.http,org.apache.http.concurrent,org.apache.http.config,org.apache.http.nio,org.apache.http.nio.pool,org.apache.http.nio.reactor,org.apache.http.nio.reactor.ssl,org.apache.http.nio.util,org.apache.http.params,org.apache.http.pool'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.nio.reactor'/>
      <p n='uses' v='javax.net.ssl,org.apache.http.config,org.apache.http.nio.reactor,org.apache.http.nio.reactor.ssl,org.apache.http.nio.util,org.apache.http.params,org.apache.http.util'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.nio.ssl'/>
      <p n='uses' v='javax.net.ssl,org.apache.http.impl.nio,org.apache.http.impl.nio.reactor,org.apache.http.nio,org.apache.http.nio.reactor,org.apache.http.params'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.impl.pool'/>
      <p n='uses' v='javax.net,javax.net.ssl,org.apache.http,org.apache.http.config,org.apache.http.params,org.apache.http.pool'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.io'/>
      <p n='uses' v='org.apache.http,org.apache.http.config,org.apache.http.util'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.message'/>
      <p n='uses' v='org.apache.http,org.apache.http.params,org.apache.http.util'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.nio'/>
      <p n='uses' v='org.apache.http,org.apache.http.config,org.apache.http.nio.reactor,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.nio.entity'/>
      <p n='uses' v='org.apache.http,org.apache.http.entity,org.apache.http.nio,org.apache.http.nio.util'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.nio.params'/>
      <p n='uses' v='org.apache.http.params'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.nio.pool'/>
      <p n='uses' v='org.apache.http.concurrent,org.apache.http.nio.reactor,org.apache.http.pool'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.nio.protocol'/>
      <p n='uses' v='org.apache.http,org.apache.http.concurrent,org.apache.http.entity,org.apache.http.nio,org.apache.http.nio.entity,org.apache.http.nio.util,org.apache.http.params,org.apache.http.pool,org.apache.http.protocol'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.nio.reactor'/>
      <p n='uses' v='org.apache.http.util'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.nio.reactor.ssl'/>
      <p n='uses' v='javax.net.ssl,org.apache.http,org.apache.http.nio.reactor'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.nio.util'/>
      <p n='uses' v='org.apache.http.io,org.apache.http.nio'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.params'/>
      <p n='uses' v='org.apache.http,org.apache.http.config'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.pool'/>
      <p n='uses' v='org.apache.http.concurrent'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.protocol'/>
      <p n='uses' v='org.apache.http,org.apache.http.params'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.ssl'/>
      <p n='uses' v='javax.net.ssl'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.http.util'/>
      <p n='uses' v='org.apache.http'/>
      <p n='version' t='version' v='4.4.13'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='f49dc09541ae924875e3061403d48b80'/>
      <p n='sha256' v='d31988d21bc3433d7b8841e86e1b9971b99d36fa0e84c03a32e129b033933fa0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.net)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.concurrent)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.concurrent ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.config)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.config ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.entity)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.entity ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.entity)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.entity ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.io)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.io ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.nio)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.nio ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.nio.codecs)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.nio.codecs ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.nio.reactor)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.impl.nio.reactor ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.io)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.io ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.message)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.message ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.nio)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.nio ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.nio.entity)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.nio.entity ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.nio.pool)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.nio.pool ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.nio.protocol)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.nio.protocol ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.nio.reactor)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.nio.reactor ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.nio.reactor.ssl)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.nio.reactor.ssl ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.nio.util)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.nio.util ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.params)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.params ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.pool)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.pool ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.protocol)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.protocol ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.ssl)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.ssl ;version=[4.4.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.util)(version&gt;=4.4.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.http.util ;version=[4.4.0,5.0.0)
    </require>
  </resource>
  <resource id='org.apache.logging.log4j.api/2.11.2' md5='3f7ee51e3dd0830de799dae0b90243dd' presentationname='Apache Log4j API' sha256='09b8ce1740491deefdb3c336855822b64609b457c2966d806348456c0da261d2' symbolicname='org.apache.logging.log4j.api' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.logging.log4j.api-2.11.2.jar' version='2.11.2'>
    <description>
      The Apache Log4j API
    </description>
    <size>
      266283
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      https://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Log4j API'/>
      <p n='symbolicname' v='org.apache.logging.log4j.api'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j'/>
      <p n='uses' v='org.apache.logging.log4j.message,org.apache.logging.log4j.spi,org.apache.logging.log4j.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.message'/>
      <p n='uses' v='org.apache.logging.log4j.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.simple'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.message,org.apache.logging.log4j.spi,org.apache.logging.log4j.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.spi'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.message,org.apache.logging.log4j.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.status'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.message,org.apache.logging.log4j.spi'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.util'/>
      <p n='uses' v='org.apache.logging.log4j.message,org.apache.logging.log4j.spi,org.osgi.framework'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='3f7ee51e3dd0830de799dae0b90243dd'/>
      <p n='sha256' v='09b8ce1740491deefdb3c336855822b64609b457c2966d806348456c0da261d2'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.message)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.message
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.simple)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.simple
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.status)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.status
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.util
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.wiring ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=sun.reflect)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package sun.reflect
    </require>
  </resource>
  <resource id='org.apache.logging.log4j.core/2.11.2' md5='c8bd8b5c5aaaa07a3dcbf57de01c9266' presentationname='Apache Log4j Core' sha256='d4748cd5d8d67f513de7634fa202740490d7e0ab546f4bf94e5c4d4a11e3edbc' symbolicname='org.apache.logging.log4j.core' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.logging.log4j.core-2.11.2.jar' version='2.11.2'>
    <description>
      The Apache Log4j Implementation
    </description>
    <size>
      1629585
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      https://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Log4j Core'/>
      <p n='symbolicname' v='org.apache.logging.log4j.core'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.impl,org.apache.logging.log4j.core.layout,org.apache.logging.log4j.core.time,org.apache.logging.log4j.message,org.apache.logging.log4j.spi,org.apache.logging.log4j.status,org.apache.logging.log4j.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.appender'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.appender.rolling,org.apache.logging.log4j.core.async,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.config.plugins.validation.constraints,org.apache.logging.log4j.core.filter,org.apache.logging.log4j.core.layout,org.apache.logging.log4j.core.net,org.apache.logging.log4j.core.net.ssl,org.apache.logging.log4j.core.script,org.apache.logging.log4j.core.util,org.apache.logging.log4j.status'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.appender.db'/>
      <p n='uses' v='org.apache.logging.log4j.core,org.apache.logging.log4j.core.appender,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.appender.db.jdbc'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.appender.db,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.config.plugins.validation.constraints,org.apache.logging.log4j.core.layout,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.appender.mom'/>
      <p n='uses' v='javax.jms,org.apache.logging.log4j.core,org.apache.logging.log4j.core.appender,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.net,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.appender.mom.jeromq'/>
      <p n='uses' v='org.apache.logging.log4j.core,org.apache.logging.log4j.core.appender,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.config.plugins.validation.constraints,org.zeromq'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.appender.mom.kafka'/>
      <p n='uses' v='org.apache.kafka.clients.producer,org.apache.logging.log4j.core,org.apache.logging.log4j.core.appender,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.appender.nosql'/>
      <p n='uses' v='org.apache.logging.log4j.core,org.apache.logging.log4j.core.appender,org.apache.logging.log4j.core.appender.db,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.appender.rewrite'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.appender,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.appender.rolling'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.appender,org.apache.logging.log4j.core.appender.rolling.action,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.lookup,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.appender.rolling.action'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.lookup,org.apache.logging.log4j.core.script,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.appender.routing'/>
      <p n='uses' v='org.apache.logging.log4j.core,org.apache.logging.log4j.core.appender,org.apache.logging.log4j.core.appender.rewrite,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.script,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.async'/>
      <p n='uses' v='com.conversantmedia.util.concurrent,com.lmax.disruptor,org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.appender,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.config.plugins.validation.constraints,org.apache.logging.log4j.core.impl,org.apache.logging.log4j.core.jmx,org.apache.logging.log4j.core.selector,org.apache.logging.log4j.core.time,org.apache.logging.log4j.core.util,org.apache.logging.log4j.message,org.apache.logging.log4j.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.async,org.apache.logging.log4j.core.config.builder.api,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.config.plugins.util,org.apache.logging.log4j.core.config.plugins.validation.constraints,org.apache.logging.log4j.core.filter,org.apache.logging.log4j.core.impl,org.apache.logging.log4j.core.lookup,org.apache.logging.log4j.core.net,org.apache.logging.log4j.core.script,org.apache.logging.log4j.core.util,org.apache.logging.log4j.message,org.apache.logging.log4j.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.builder.api'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.builder.impl,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.builder.impl'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.builder.api,org.apache.logging.log4j.core.config.plugins.util,org.apache.logging.log4j.core.config.status'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.composite'/>
      <p n='uses' v='org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.json'/>
      <p n='uses' v='com.fasterxml.jackson.databind,org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.plugins'/>
      <p n='uses' v='org.apache.logging.log4j.core.config.plugins.visitors'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.plugins.convert'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core.appender.rolling.action,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.plugins.processor'/>
      <p n='uses' v='javax.annotation.processing,javax.lang.model,javax.lang.model.element'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.plugins.util'/>
      <p n='uses' v='org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins.processor,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.plugins.validation'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.plugins.validation.constraints'/>
      <p n='uses' v='org.apache.logging.log4j.core.config.plugins.validation,org.apache.logging.log4j.core.config.plugins.validation.validators'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.plugins.validation.validators'/>
      <p n='uses' v='org.apache.logging.log4j.core.config.plugins.validation,org.apache.logging.log4j.core.config.plugins.validation.constraints'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.plugins.visitors'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.lookup'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.properties'/>
      <p n='uses' v='org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.builder.api,org.apache.logging.log4j.core.config.builder.impl,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.status'/>
      <p n='uses' v='org.apache.logging.log4j'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.xml'/>
      <p n='uses' v='org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.config.yaml'/>
      <p n='uses' v='com.fasterxml.jackson.databind,org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.json,org.apache.logging.log4j.core.config.plugins'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.filter'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.script,org.apache.logging.log4j.core.util,org.apache.logging.log4j.message,org.apache.logging.log4j.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.impl'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.pattern,org.apache.logging.log4j.core.selector,org.apache.logging.log4j.core.time,org.apache.logging.log4j.core.util,org.apache.logging.log4j.message,org.apache.logging.log4j.spi,org.apache.logging.log4j.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.jackson'/>
      <p n='uses' v='com.fasterxml.jackson.core,com.fasterxml.jackson.databind,com.fasterxml.jackson.databind.deser.std,com.fasterxml.jackson.databind.ser.std,com.fasterxml.jackson.dataformat.xml,com.fasterxml.jackson.dataformat.yaml,org.apache.logging.log4j.message,org.apache.logging.log4j.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.jmx'/>
      <p n='uses' v='com.lmax.disruptor,javax.management,org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.appender,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.selector,org.apache.logging.log4j.status'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.layout'/>
      <p n='uses' v='com.fasterxml.jackson.annotation,com.fasterxml.jackson.core,com.fasterxml.jackson.databind,com.fasterxml.jackson.dataformat.xml.annotation,org.apache.commons.csv,org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.net,org.apache.logging.log4j.core.pattern,org.apache.logging.log4j.core.script,org.apache.logging.log4j.core.util,org.apache.logging.log4j.message'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.lookup'/>
      <p n='uses' v='org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.message'/>
      <p n='uses' v='org.apache.logging.log4j.message'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.net'/>
      <p n='uses' v='javax.mail,javax.mail.internet,javax.naming,org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.appender,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.net.ssl,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.net.ssl'/>
      <p n='uses' v='javax.net.ssl,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.status'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.osgi'/>
      <p n='uses' v='org.apache.logging.log4j.core,org.apache.logging.log4j.core.selector,org.osgi.framework'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.parser'/>
      <p n='uses' v='org.apache.logging.log4j.core'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.pattern'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.impl,org.apache.logging.log4j.core.time,org.apache.logging.log4j.message,org.fusesource.jansi'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.script'/>
      <p n='uses' v='javax.script,org.apache.logging.log4j,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins,org.apache.logging.log4j.core.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.selector'/>
      <p n='uses' v='org.apache.logging.log4j.core,org.apache.logging.log4j.status'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.time'/>
      <p n='uses' v='org.apache.logging.log4j.core.util,org.apache.logging.log4j.util'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.time.internal'/>
      <p n='uses' v='org.apache.logging.log4j.core.time'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.tools'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.tools.picocli'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.util'/>
      <p n='uses' v='javax.crypto,javax.naming,org.apache.logging.log4j,org.apache.logging.log4j.core,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.config.plugins'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.core.util.datetime'/>
      <p n='uses' v='org.apache.logging.log4j.core.time'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='c8bd8b5c5aaaa07a3dcbf57de01c9266'/>
      <p n='sha256' v='d4748cd5d8d67f513de7634fa202740490d7e0ab546f4bf94e5c4d4a11e3edbc'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.conversantmedia.util.concurrent)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.conversantmedia.util.concurrent
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.annotation ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.core ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.type)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.core.type ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.core.util)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.core.util ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.databind ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.databind.annotation ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.deser.std)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.databind.deser.std ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.module)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.databind.module ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.node)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.databind.node ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.ser)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.databind.ser ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.ser.impl)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.databind.ser.impl ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.databind.ser.std)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.databind.ser.std ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.dataformat.xml)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.dataformat.xml ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.dataformat.xml.annotation)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.dataformat.xml.annotation
       ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.dataformat.xml.util)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.dataformat.xml.util ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.fasterxml.jackson.dataformat.yaml)(version&gt;=2.9.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.fasterxml.jackson.dataformat.yaml ;version=[2.9.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.lmax.disruptor)(version&gt;=3.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.lmax.disruptor ;version=[3.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.lmax.disruptor.dsl)(version&gt;=3.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.lmax.disruptor.dsl ;version=[3.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.activation
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation.processing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.annotation.processing
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.jms ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.lang.model)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.lang.model
    </require>
    <require extend='false' filter='(&amp;(package=javax.lang.model.element)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.lang.model.element
    </require>
    <require extend='false' filter='(&amp;(package=javax.lang.model.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.lang.model.util
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.mail ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail.internet)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.mail.internet ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail.util)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.mail.util ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.net)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=javax.script)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.script
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=javax.tools)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.tools
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.compressors)(version&gt;=1.18.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.compressors ;version=[1.18.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.utils)(version&gt;=1.18.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.utils ;version=[1.18.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.csv)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.csv ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.kafka.clients.producer)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.kafka.clients.producer
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.appender)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.appender
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.appender.db)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.appender.db
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.appender.rewrite)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.appender.rewrite
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.appender.rolling)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.appender.rolling
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.appender.rolling.action)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.appender.rolling.action
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.async)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.async
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.builder.api)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.builder.api
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.builder.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.builder.impl
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.composite)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.composite
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.json)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.json
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.plugins)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.plugins
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.plugins.convert)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.plugins.convert
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.plugins.processor)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.plugins.processor
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.plugins.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.plugins.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.plugins.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.plugins.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.plugins.validation.constraints)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.plugins.validation.constraints
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.plugins.validation.validators)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.plugins.validation.validators
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.plugins.visitors)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.plugins.visitors
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.config.status)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.config.status
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.filter)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.filter
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.impl
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.jackson)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.jackson
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.jmx)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.jmx
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.layout)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.layout
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.lookup)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.lookup
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.net)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.net
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.pattern)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.pattern
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.script)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.script
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.selector)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.selector
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.time)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.time
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.tools.picocli)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.tools.picocli
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.core.util.datetime)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.core.util.datetime
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.message)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.message ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.spi)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.spi ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.status)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.status ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.util)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.util ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.stax2)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.stax2 ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.jansi)(version&gt;=1.17.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.fusesource.jansi ;version=[1.17.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jctools.queues)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jctools.queues
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework.wiring ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.zeromq)(version&gt;=0.4.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.zeromq ;version=[0.4.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=sun.reflect)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package sun.reflect
    </require>
  </resource>
  <resource id='org.apache.logging.log4j.jcl/2.11.2' md5='065d199868c21b03506a560db2e08979' presentationname='Apache Log4j Commons Logging Bridge' sha256='29ca7c4d3cf0d3c8b2c76de749875ef09fe9dbeb6953bf995f26aef3a8153b66' symbolicname='org.apache.logging.log4j.jcl' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.logging.log4j.jcl-2.11.2.jar' version='2.11.2'>
    <description>
      The Apache Log4j Commons Logging Adapter
    </description>
    <size>
      12661
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      https://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Log4j Commons Logging Bridge'/>
      <p n='symbolicname' v='org.apache.logging.log4j.jcl'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.log4j.jcl'/>
      <p n='uses' v='org.apache.commons.logging,org.apache.logging.log4j.spi'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='065d199868c21b03506a560db2e08979'/>
      <p n='sha256' v='29ca7c4d3cf0d3c8b2c76de749875ef09fe9dbeb6953bf995f26aef3a8153b66'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.spi)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.spi ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.util)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.util ;version=[2.11.0,3.0.0)
    </require>
  </resource>
  <resource id='org.apache.logging.log4j.slf4j-impl/2.11.2' md5='362ea49cf465dc99c9dfe4a1b1e54dc8' presentationname='Apache Log4j SLF4J Binding' sha256='9e14eeb17454821788c5d7b789b2d5b055d51809c0c3761505f6f57ad04a658e' symbolicname='org.apache.logging.log4j.slf4j-impl' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.logging.log4j.slf4j-impl-2.11.2.jar' version='2.11.2'>
    <description>
      The Apache Log4j SLF4J API binding to Log4j 2 Core
    </description>
    <size>
      23239
    </size>
    <license>
      https://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      https://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Log4j SLF4J Binding'/>
      <p n='symbolicname' v='org.apache.logging.log4j.slf4j-impl'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.logging.slf4j'/>
      <p n='uses' v='org.apache.logging.log4j,org.apache.logging.log4j.message,org.apache.logging.log4j.spi,org.slf4j,org.slf4j.spi'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.impl'/>
      <p n='uses' v='org.slf4j,org.slf4j.spi'/>
      <p n='version' t='version' v='2.11.2'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='362ea49cf465dc99c9dfe4a1b1e54dc8'/>
      <p n='sha256' v='9e14eeb17454821788c5d7b789b2d5b055d51809c0c3761505f6f57ad04a658e'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.message)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.message ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.spi)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.spi ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.status)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.status ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.log4j.util)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.log4j.util ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.logging.slf4j)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.logging.slf4j
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.ext)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.slf4j.ext ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.impl
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j.spi)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.spi ;version=[1.7.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.tika.core/1.18.0' md5='2c318d82d76db77902d71d143a88973f' presentationname='Apache Tika core' sha256='1b2ddfa61713ecd708b19cd41f8c048fa727b3fa314ce11897de09bf3349eb38' symbolicname='org.apache.tika.core' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.tika.core-1.18.0.jar' version='1.18.0'>
    <description>
      This is the core Apache Tika™ toolkit library from which all
       other modules inherit functionality. It also    includes the
       core facades for the Tika API.
    </description>
    <size>
      664360
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://tika.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Tika core'/>
      <p n='symbolicname' v='org.apache.tika.core'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.concurrent'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.config'/>
      <p n='uses' v='javax.xml.transform,org.apache.tika.detect,org.apache.tika.exception,org.apache.tika.language.translate,org.apache.tika.mime,org.apache.tika.parser,org.osgi.framework,org.osgi.util.tracker,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.detect'/>
      <p n='uses' v='javax.xml.namespace,org.apache.tika.config,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.xml.sax'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.embedder'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.exception'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.extractor'/>
      <p n='uses' v='org.apache.tika.config,org.apache.tika.detect,org.apache.tika.exception,org.apache.tika.io,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.fork'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.io'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.language.detect'/>
      <p n='uses' v='org.apache.tika.config,org.apache.tika.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.language'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.language.translate'/>
      <p n='uses' v='org.apache.tika.config,org.apache.tika.exception'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.metadata'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.mime'/>
      <p n='uses' v='org.apache.tika.detect,org.apache.tika.exception,org.apache.tika.metadata,org.w3c.dom,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika'/>
      <p n='uses' v='org.apache.tika.config,org.apache.tika.detect,org.apache.tika.exception,org.apache.tika.language.translate,org.apache.tika.metadata,org.apache.tika.parser'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser'/>
      <p n='uses' v='javax.xml.parsers,javax.xml.stream,javax.xml.transform,org.apache.tika.config,org.apache.tika.detect,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.sax,org.xml.sax'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.digest'/>
      <p n='uses' v='org.apache.tika.metadata,org.apache.tika.parser'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.external'/>
      <p n='uses' v='org.apache.tika.config,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.sax'/>
      <p n='uses' v='javax.xml.namespace,org.apache.tika.exception,org.apache.tika.io,org.apache.tika.metadata,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.sax.xpath'/>
      <p n='uses' v='org.apache.tika.sax,org.xml.sax'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.utils'/>
      <p n='uses' v='javax.xml.parsers,javax.xml.stream,javax.xml.transform,org.apache.tika.config,org.apache.tika.exception,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='2c318d82d76db77902d71d143a88973f'/>
      <p n='sha256' v='1b2ddfa61713ecd708b19cd41f8c048fa727b3fa314ce11897de09bf3349eb38'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.concurrent)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.concurrent
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.config)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.config ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.detect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.detect ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.exception)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.exception ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.extractor)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.extractor ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.io)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.io ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.language.translate)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.language.translate
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.metadata)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.metadata ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.mime)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.mime ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.sax)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.sax ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.sax.xpath)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.sax.xpath ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.utils)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.utils ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.osgi.util.tracker
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id='org.apache.tika.parsers/1.18.0' md5='78b1ecd14d44aaae25481d5c473eda7f' presentationname='Apache Tika parsers' sha256='745dc30994746af26c64a62b1bf52ab1030dedf070c2ca3589a0bc4694785d2a' symbolicname='org.apache.tika.parsers' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.apache.tika.parsers-1.18.0.jar' version='1.18.0'>
    <description>
      Apache Tika is a toolkit for detecting and extracting metadata
       and    structured text content from various documents using
       existing parser    libraries.
    </description>
    <size>
      1110043
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://tika.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Tika parsers'/>
      <p n='symbolicname' v='org.apache.tika.parsers'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.apple'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.asm'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.audio'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.captioning'/>
      <p n='uses' v='org.apache.tika.parser.recognition'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.captioning.tf'/>
      <p n='uses' v='org.apache.tika.config,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.apache.tika.parser.captioning,org.apache.tika.parser.recognition,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.chm.accessor'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.parser.chm.core'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.chm.assertion'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.parser.chm.accessor,org.apache.tika.parser.chm.core,org.apache.tika.parser.chm.exception'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.chm'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.chm.core'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.parser.chm.accessor,org.apache.tika.parser.chm.exception,org.apache.tika.parser.chm.lzx'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.chm.exception'/>
      <p n='uses' v='org.apache.tika.exception'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.chm.lzx'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.parser.chm.accessor,org.apache.tika.parser.chm.core,org.apache.tika.parser.chm.exception'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.code'/>
      <p n='uses' v='org.apache.tika.detect,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.crypto'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.ctakes'/>
      <p n='uses' v='org.apache.ctakes.typesystem.type.textsem,org.apache.tika.config,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.parser,org.apache.tika.sax,org.apache.uima.analysis_engine,org.apache.uima.jcas,org.apache.uima.resource,org.apache.uima.util,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.dbf'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.dif'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.dwg'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.envi'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.epub'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.executable'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.apache.tika.sax,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.feed'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.font'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.gdal'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.geo.topic.gazetteer'/>
      <p n='uses' v='org.apache.tika.parser.geo.topic'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.geo.topic'/>
      <p n='uses' v='opennlp.tools.namefind,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.apache.tika.parser.geo.topic.gazetteer,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.geoinfo'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.grib'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.hdf'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax,ucar.nc2'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.html'/>
      <p n='uses' v='de.l3s.boilerpipe,de.l3s.boilerpipe.document,de.l3s.boilerpipe.sax,org.apache.tika.config,org.apache.tika.detect,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.image'/>
      <p n='uses' v='com.drew.metadata,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.image.xmp'/>
      <p n='uses' v='org.apache.jempbox.xmp,org.apache.tika.exception,org.apache.tika.metadata'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.iptc'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.isatab'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.apache.tika.sax,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.iwork'/>
      <p n='uses' v='org.apache.commons.compress.archivers.zip,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.iwork.iwana'/>
      <p n='uses' v='org.apache.commons.compress.archivers.zip,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.jdbc'/>
      <p n='uses' v='org.apache.tika.config,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.journal'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.jpeg'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.mail'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.mat'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.mbox'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.microsoft'/>
      <p n='uses' v='org.apache.poi.hssf.extractor,org.apache.poi.hwpf,org.apache.poi.hwpf.usermodel,org.apache.poi.poifs.filesystem,org.apache.poi.ss.usermodel,org.apache.tika.config,org.apache.tika.detect,org.apache.tika.exception,org.apache.tika.extractor,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.apache.tika.sax,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.microsoft.ooxml'/>
      <p n='uses' v='org.apache.poi,org.apache.poi.openxml4j.opc,org.apache.poi.ss.usermodel,org.apache.poi.xslf.extractor,org.apache.poi.xssf.eventusermodel,org.apache.poi.xssf.model,org.apache.poi.xssf.usermodel,org.apache.poi.xssf.usermodel.helpers,org.apache.poi.xwpf.extractor,org.apache.poi.xwpf.usermodel,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.apache.tika.parser.microsoft,org.apache.tika.parser.microsoft.ooxml.xslf,org.apache.tika.parser.microsoft.ooxml.xwpf,org.apache.tika.sax,org.apache.xmlbeans,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.microsoft.ooxml.xps'/>
      <p n='uses' v='org.apache.poi,org.apache.poi.openxml4j.exceptions,org.apache.poi.openxml4j.opc,org.apache.tika.exception,org.apache.tika.parser,org.apache.tika.parser.microsoft.ooxml,org.apache.tika.sax,org.apache.xmlbeans,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.microsoft.ooxml.xslf'/>
      <p n='uses' v='org.apache.poi,org.apache.poi.openxml4j.exceptions,org.apache.poi.openxml4j.opc,org.apache.xmlbeans'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.microsoft.ooxml.xwpf.ml2006'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.apache.tika.parser.microsoft,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.microsoft.ooxml.xwpf'/>
      <p n='uses' v='org.apache.poi,org.apache.poi.openxml4j.exceptions,org.apache.poi.openxml4j.opc,org.apache.poi.xwpf.usermodel,org.apache.tika.exception,org.apache.tika.parser,org.apache.xmlbeans,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.microsoft.xml'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.mp3'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.mp4'/>
      <p n='uses' v='com.googlecode.mp4parser,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.ner.corenlp'/>
      <p n='uses' v='com.github.openjson,org.apache.tika.parser.ner'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.ner.grobid'/>
      <p n='uses' v='org.apache.tika.parser.ner,org.json.simple'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.ner.mitie'/>
      <p n='uses' v='org.apache.tika.parser.ner'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.ner'/>
      <p n='uses' v='org.apache.tika,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.slf4j,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.ner.nltk'/>
      <p n='uses' v='org.apache.tika.parser.ner'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.ner.opennlp'/>
      <p n='uses' v='org.apache.tika.parser.ner'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.ner.regex'/>
      <p n='uses' v='org.apache.tika.parser.ner'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.netcdf'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.ocr'/>
      <p n='uses' v='org.apache.tika.config,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.apache.tika.sax,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.odf'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.apache.tika.parser.xml,org.apache.tika.sax,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.opendocument'/>
      <p n='uses' v='org.apache.tika.parser.odf'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.pdf'/>
      <p n='uses' v='org.apache.pdfbox.rendering,org.apache.tika.config,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.pkg'/>
      <p n='uses' v='org.apache.poi.openxml4j.opc,org.apache.tika.config,org.apache.tika.detect,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.apache.tika.sax,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.pot'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.prt'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.recognition'/>
      <p n='uses' v='org.apache.tika.config,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.recognition.tf'/>
      <p n='uses' v='org.apache.tika.config,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.apache.tika.parser.external,org.apache.tika.parser.recognition,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.rtf'/>
      <p n='uses' v='org.apache.tika.config,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.sentiment'/>
      <p n='uses' v='org.apache.tika.config,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.strings'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.txt'/>
      <p n='uses' v='org.apache.tika.config,org.apache.tika.detect,org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.utils'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.mime,org.apache.tika.parser.digest'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.video'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.wordperfect'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.tika.parser.xml'/>
      <p n='uses' v='org.apache.tika.exception,org.apache.tika.metadata,org.apache.tika.mime,org.apache.tika.parser,org.xml.sax,org.xml.sax.helpers'/>
      <p n='version' t='version' v='1.18.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='78b1ecd14d44aaae25481d5c473eda7f'/>
      <p n='sha256' v='745dc30994746af26c64a62b1bf52ab1030dedf070c2ca3589a0bc4694785d2a'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.config)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.config ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.detect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.detect ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.exception)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.exception ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.extractor)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.extractor ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.io)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.io ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.metadata)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.metadata ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.mime)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.mime ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.captioning)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.captioning
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.chm.accessor)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.chm.accessor
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.chm.assertion)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.chm.assertion
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.chm.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.chm.core
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.chm.exception)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.chm.exception
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.chm.lzx)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.chm.lzx
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.digest)(version&gt;=1.18.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.digest ;version=[1.18.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.external)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.external ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.geo.topic)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.geo.topic
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.geo.topic.gazetteer)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.geo.topic.gazetteer
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.html)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.html
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.image)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.image
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.image.xmp)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.image.xmp
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.iwork)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.iwork
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.iwork.iwana)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.iwork.iwana
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.jpeg)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.jpeg
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.mail)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.mail
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.mbox)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.mbox
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.microsoft)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.microsoft
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.microsoft.ooxml)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.microsoft.ooxml
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.microsoft.ooxml.xps)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.microsoft.ooxml.xps
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.microsoft.ooxml.xslf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.microsoft.ooxml.xslf
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.microsoft.ooxml.xwpf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.microsoft.ooxml.xwpf
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.mp4)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.mp4
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.ner)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.ner
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.ner.opennlp)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.ner.opennlp
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.ner.regex)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.ner.regex
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.ocr)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.ocr
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.odf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.odf
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.pdf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.pdf
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.pkg)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.pkg
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.recognition)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.recognition
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.rtf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.rtf
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.txt)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.txt
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.utils)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.utils
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.parser.xml)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.parser.xml
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.sax)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.sax ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.sax.xpath)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.sax.xpath ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tika.utils)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.tika.utils ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.coremedia.iso)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.coremedia.iso
    </require>
    <require extend='false' filter='(&amp;(package=com.coremedia.iso.boxes)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.coremedia.iso.boxes
    </require>
    <require extend='false' filter='(&amp;(package=com.coremedia.iso.boxes.apple)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.coremedia.iso.boxes.apple
    </require>
    <require extend='false' filter='(&amp;(package=com.coremedia.iso.boxes.sampleentry)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.coremedia.iso.boxes.sampleentry
    </require>
    <require extend='false' filter='(&amp;(package=com.drew.imaging.jpeg)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.drew.imaging.jpeg
    </require>
    <require extend='false' filter='(&amp;(package=com.drew.imaging.riff)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.drew.imaging.riff
    </require>
    <require extend='false' filter='(&amp;(package=com.drew.imaging.tiff)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.drew.imaging.tiff
    </require>
    <require extend='false' filter='(&amp;(package=com.drew.imaging.webp)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.drew.imaging.webp
    </require>
    <require extend='false' filter='(&amp;(package=com.drew.lang)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.drew.lang
    </require>
    <require extend='false' filter='(&amp;(package=com.drew.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.drew.metadata
    </require>
    <require extend='false' filter='(&amp;(package=com.drew.metadata.exif)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.drew.metadata.exif
    </require>
    <require extend='false' filter='(&amp;(package=com.drew.metadata.iptc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.drew.metadata.iptc
    </require>
    <require extend='false' filter='(&amp;(package=com.drew.metadata.jpeg)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.drew.metadata.jpeg
    </require>
    <require extend='false' filter='(&amp;(package=com.github.junrar)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.github.junrar
    </require>
    <require extend='false' filter='(&amp;(package=com.github.junrar.exception)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.github.junrar.exception
    </require>
    <require extend='false' filter='(&amp;(package=com.github.junrar.rarfile)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.github.junrar.rarfile
    </require>
    <require extend='false' filter='(&amp;(package=com.github.openjson)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.github.openjson ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.google.common.reflect)(version&gt;=17.0.0)(!(version&gt;=18.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.google.common.reflect ;version=[17.0.0,18.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.google.gson)(version&gt;=2.8.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.google.gson ;version=[2.8.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.googlecode.mp4parser)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.googlecode.mp4parser
    </require>
    <require extend='false' filter='(&amp;(package=com.googlecode.mp4parser.boxes.apple)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.googlecode.mp4parser.boxes.apple
    </require>
    <require extend='false' filter='(&amp;(package=com.googlecode.mp4parser.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.googlecode.mp4parser.util
    </require>
    <require extend='false' filter='(&amp;(package=com.healthmarketscience.jackcess)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.healthmarketscience.jackcess ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.healthmarketscience.jackcess.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.healthmarketscience.jackcess.impl
    </require>
    <require extend='false' filter='(&amp;(package=com.healthmarketscience.jackcess.query)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.healthmarketscience.jackcess.query ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.healthmarketscience.jackcess.util)(version&gt;=2.1.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.healthmarketscience.jackcess.util ;version=[2.1.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.jmatio.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.jmatio.io
    </require>
    <require extend='false' filter='(&amp;(package=com.jmatio.types)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.jmatio.types
    </require>
    <require extend='false' filter='(&amp;(package=com.pff)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.pff
    </require>
    <require extend='false' filter='(&amp;(package=com.rometools.rome.feed.synd)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.rometools.rome.feed.synd
    </require>
    <require extend='false' filter='(&amp;(package=com.rometools.rome.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.rometools.rome.io
    </require>
    <require extend='false' filter='(&amp;(package=com.uwyn.jhighlight.renderer)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.uwyn.jhighlight.renderer
    </require>
    <require extend='false' filter='(&amp;(package=de.l3s.boilerpipe)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package de.l3s.boilerpipe
    </require>
    <require extend='false' filter='(&amp;(package=de.l3s.boilerpipe.document)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package de.l3s.boilerpipe.document
    </require>
    <require extend='false' filter='(&amp;(package=de.l3s.boilerpipe.extractors)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package de.l3s.boilerpipe.extractors
    </require>
    <require extend='false' filter='(&amp;(package=de.l3s.boilerpipe.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package de.l3s.boilerpipe.sax
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.imageio
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.imageio.metadata
    </require>
    <require extend='false' filter='(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.imageio.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.sound.midi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sound.midi
    </require>
    <require extend='false' filter='(&amp;(package=javax.sound.sampled)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sound.sampled
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql.rowset.serial)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sql.rowset.serial
    </require>
    <require extend='false' filter='(&amp;(package=javax.ws.rs.core)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.ws.rs.core ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=opennlp.tools.namefind)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package opennlp.tools.namefind ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=opennlp.tools.sentiment)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package opennlp.tools.sentiment
    </require>
    <require extend='false' filter='(&amp;(package=opennlp.tools.util)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package opennlp.tools.util ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.codec.binary)(version&gt;=1.10.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.codec.binary ;version=[1.10.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections4)(version&gt;=4.1.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.collections4 ;version=[4.1.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.archivers ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers.ar)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.archivers.ar ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers.cpio)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.archivers.cpio ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers.dump)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.archivers.dump ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers.jar)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.archivers.jar ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers.sevenz)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.archivers.sevenz
       ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers.tar)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.archivers.tar ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.archivers.zip)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.archivers.zip ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.compressors)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.compressors ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.compressors.bzip2)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.compressors.bzip2
       ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.compressors.deflate)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.compressors.deflate
       ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.compressors.gzip)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.compressors.gzip
       ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.compressors.lzma)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.compressors.lzma
       ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.compressors.pack200)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.compressors.pack200
       ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.compressors.snappy)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.compressors.snappy
       ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.compressors.xz)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.compressors.xz ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.compress.compressors.z)(version&gt;=1.16.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.compress.compressors.z ;version=[1.16.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.csv)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.csv ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.exec)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.exec ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.exec.environment)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.exec.environment ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.io ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.input)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.io.input ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.io.output)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.io.output ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.lang)(version&gt;=2.6.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.lang ;version=[2.6.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.ctakes.typesystem.type.refsem)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.ctakes.typesystem.type.refsem
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.ctakes.typesystem.type.textsem)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.ctakes.typesystem.type.textsem
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.cxf.jaxrs.client)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.cxf.jaxrs.client ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.cxf.jaxrs.ext.multipart)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.cxf.jaxrs.ext.multipart ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fontbox.afm)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.fontbox.afm ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.fontbox.ttf)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.fontbox.ttf ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.client
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.methods)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.client.methods
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.utils)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.client.utils
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.entity)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.entity
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.client)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.impl.client
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.james.mime4j)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.james.mime4j ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.james.mime4j.codec)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.james.mime4j.codec ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.james.mime4j.dom)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.james.mime4j.dom ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.james.mime4j.dom.address)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.james.mime4j.dom.address ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.james.mime4j.dom.field)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.james.mime4j.dom.field ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.james.mime4j.field)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.james.mime4j.field ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.james.mime4j.message)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.james.mime4j.message ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.james.mime4j.parser)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.james.mime4j.parser ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.james.mime4j.stream)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.james.mime4j.stream ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.james.mime4j.util)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.james.mime4j.util ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.jempbox.xmp)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.jempbox.xmp ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.jempbox.xmp.pdfa)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.jempbox.xmp.pdfa ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.cos)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.cos ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.filter)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.filter ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.io)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.io ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdfparser)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdfparser ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdmodel)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdmodel ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdmodel.common)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdmodel.common ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdmodel.common.filespecification)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdmodel.common.filespecification
       ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdmodel.encryption)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdmodel.encryption ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdmodel.graphics)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdmodel.graphics ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdmodel.graphics.color)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdmodel.graphics.color ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdmodel.graphics.form)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdmodel.graphics.form ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdmodel.graphics.image)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdmodel.graphics.image ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdmodel.interactive.action)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdmodel.interactive.action
       ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdmodel.interactive.annotation)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdmodel.interactive.annotation
       ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdmodel.interactive.digitalsignature)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdmodel.interactive.digitalsignature
       ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdmodel.interactive.documentnavigation.outline
       ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.pdmodel.interactive.form)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.pdmodel.interactive.form ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.rendering)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.rendering ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.text)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.text ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.pdfbox.tools.imageio)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.pdfbox.tools.imageio
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.common.usermodel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.common.usermodel
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.common.usermodel.fonts)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.common.usermodel.fonts
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.ddf)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.ddf
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.extractor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.extractor
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hdgf.extractor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hdgf.extractor
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hemf.extractor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hemf.extractor
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hemf.record)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hemf.record
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hmef)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hmef
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hmef.attribute)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hmef.attribute
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hpbf.extractor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hpbf.extractor
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hpsf)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hpsf
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hslf.exceptions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hslf.exceptions
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hslf.model)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hslf.model
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hslf.record)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hslf.record
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hslf.usermodel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hslf.usermodel
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hsmf)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hsmf
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hsmf.datatypes)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hsmf.datatypes
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hsmf.exceptions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hsmf.exceptions
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hssf.eventusermodel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hssf.eventusermodel
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hssf.extractor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hssf.extractor
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hssf.record)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hssf.record
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hssf.record.chart)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hssf.record.chart
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hssf.record.common)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hssf.record.common
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hssf.record.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hssf.record.crypto
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hssf.usermodel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hssf.usermodel
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hwmf.record)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hwmf.record
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hwmf.usermodel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hwmf.usermodel
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hwpf)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hwpf
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hwpf.converter)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hwpf.converter
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hwpf.extractor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hwpf.extractor
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hwpf.model)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hwpf.model
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.hwpf.usermodel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.hwpf.usermodel
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.openxml4j.exceptions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.openxml4j.exceptions
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.openxml4j.opc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.openxml4j.opc
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.openxml4j.opc.internal)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.openxml4j.opc.internal
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.openxml4j.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.openxml4j.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.poifs.crypt)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.poifs.crypt
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.poifs.filesystem)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.poifs.filesystem
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.poifs.macros)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.poifs.macros
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.sl.usermodel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.sl.usermodel
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.ss.usermodel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.ss.usermodel
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.xslf.extractor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.xslf.extractor
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.xslf.usermodel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.xslf.usermodel
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.xssf.binary)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.xssf.binary
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.xssf.eventusermodel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.xssf.eventusermodel
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.xssf.extractor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.xssf.extractor
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.xssf.model)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.xssf.model
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.xssf.usermodel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.xssf.usermodel
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.xssf.usermodel.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.xssf.usermodel.helpers
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.xwpf.extractor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.xwpf.extractor
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.xwpf.model)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.xwpf.model
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.poi.xwpf.usermodel)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.poi.xwpf.usermodel
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.sis.internal.util)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.sis.internal.util ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.sis.metadata.iso)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.sis.metadata.iso ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.sis.metadata.iso.constraint)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.sis.metadata.iso.constraint ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.sis.metadata.iso.extent)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.sis.metadata.iso.extent ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.sis.metadata.iso.identification)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.sis.metadata.iso.identification ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.sis.storage)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.sis.storage ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.sis.util.collection)(version&gt;=0.8.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.sis.util.collection ;version=[0.8.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.uima)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.uima
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.uima.analysis_engine)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.uima.analysis_engine
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.uima.cas)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.uima.cas
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.uima.cas.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.uima.cas.impl
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.uima.fit.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.uima.fit.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.uima.jcas)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.uima.jcas
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.uima.jcas.cas)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.uima.jcas.cas
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.uima.resource)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.uima.resource
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.uima.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.uima.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlbeans)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlbeans
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xmlbeans.impl.values)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.xmlbeans.impl.values
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.asn1)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.asn1 ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.asn1.cryptopro)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.asn1.cryptopro ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.asn1.nist)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.asn1.nist ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.asn1.oiw)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.asn1.oiw ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.asn1.pkcs)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.asn1.pkcs ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.asn1.teletrust)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.asn1.teletrust ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.asn1.x509)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.asn1.x509 ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.asn1.x9)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.asn1.x9 ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.cms)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.cms ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.jce.provider)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.jce.provider ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.operator)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.operator ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.operator.jcajce)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.operator.jcajce ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.tsp)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.tsp ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.tsp.cms)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.tsp.cms ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.bouncycastle.util.encoders)(version&gt;=1.54.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.bouncycastle.util.encoders ;version=[1.54.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.ccil.cowan.tagsoup)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.ccil.cowan.tagsoup
    </require>
    <require extend='false' filter='(&amp;(package=org.json.simple)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.json.simple ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.json.simple.parser)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.json.simple.parser ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mozilla.universalchardet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.mozilla.universalchardet
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.asm)(version&gt;=5.0.0)(!(version&gt;=6.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.objectweb.asm ;version=[5.0.0,6.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.opengis.metadata)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.opengis.metadata ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.opengis.metadata.citation)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.opengis.metadata.citation ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.opengis.metadata.constraint)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.opengis.metadata.constraint ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.opengis.metadata.distribution)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.opengis.metadata.distribution ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.opengis.metadata.extent)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.opengis.metadata.extent ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.opengis.metadata.identification)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.opengis.metadata.identification ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.opengis.metadata.maintenance)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.opengis.metadata.maintenance ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.opengis.util)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.opengis.util ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.openxmlformats.schemas.drawingml.x2006.main)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.openxmlformats.schemas.drawingml.x2006.main
    </require>
    <require extend='false' filter='(&amp;(package=org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.openxmlformats.schemas.drawingml.x2006.spreadsheetDrawing
    </require>
    <require extend='false' filter='(&amp;(package=org.openxmlformats.schemas.officeDocument.x2006.customProperties)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.openxmlformats.schemas.officeDocument.x2006.customProperties
    </require>
    <require extend='false' filter='(&amp;(package=org.openxmlformats.schemas.officeDocument.x2006.extendedProperties)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.openxmlformats.schemas.officeDocument.x2006.extendedProperties
    </require>
    <require extend='false' filter='(&amp;(package=org.openxmlformats.schemas.presentationml.x2006.main)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.openxmlformats.schemas.presentationml.x2006.main
    </require>
    <require extend='false' filter='(&amp;(package=org.openxmlformats.schemas.wordprocessingml.x2006.main)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.openxmlformats.schemas.wordprocessingml.x2006.main
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.sqlite)(version&gt;=3.18.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.sqlite ;version=[3.18.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(&amp;(package=ucar.ma2)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package ucar.ma2
    </require>
    <require extend='false' filter='(&amp;(package=ucar.nc2)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package ucar.nc2
    </require>
    <require extend='false' filter='(&amp;(package=ucar.nc2.dataset)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package ucar.nc2.dataset
    </require>
    <require extend='false' filter='(&amp;(package=ucar.nc2.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package ucar.nc2.util
    </require>
  </resource>
  <resource id='org.bitbucket.b_c.jose4j/0.6.3' md5='217281ced522dc08ec352179363989c4' presentationname='jose4j' sha256='5f32e4725b3c0815d8e6291bdfb2e8c9bbba404af0a0fb12fa5aad48e9185104' symbolicname='org.bitbucket.b_c.jose4j' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.bitbucket.b_c.jose4j-0.6.3.jar' version='0.6.3'>
    <description>
      The jose.4.j library is a robust and easy to use open source
       implementation of JSON Web Token (JWT) and the JOSE specification
       suite (JWS, JWE, and JWK).     It is written in Java and relies
       solely on the JCA APIs for cryptography.     Please see https://bitbucket.org/b_c/jose4j/wiki/Home
       for more info, examples, etc..
    </description>
    <size>
      258850
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='jose4j'/>
      <p n='symbolicname' v='org.bitbucket.b_c.jose4j'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.base64url'/>
      <p n='uses' v='org.jose4j.lang'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.http'/>
      <p n='uses' v='org.jose4j.lang,javax.net.ssl,org.slf4j'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.jca'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.json'/>
      <p n='uses' v='org.jose4j.lang'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.jwa'/>
      <p n='uses' v='org.jose4j.keys,org.slf4j,org.jose4j.lang,org.jose4j.jwe,org.jose4j.zip,org.jose4j.jws'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.jwe'/>
      <p n='uses' v='org.jose4j.lang,javax.crypto,org.jose4j.jwx,javax.crypto.spec,org.jose4j.keys,org.jose4j.jca,org.jose4j.jwa,org.jose4j.mac,org.jose4j.base64url,org.slf4j,org.jose4j.jwk,org.jose4j.jwe.kdf,org.jose4j.zip'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.jwe.kdf'/>
      <p n='uses' v='org.jose4j.lang,org.slf4j,org.jose4j.base64url,org.jose4j.keys,org.jose4j.mac,javax.crypto'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.jwk'/>
      <p n='uses' v='org.jose4j.jwe,org.jose4j.lang,org.jose4j.keys,org.jose4j.http,org.slf4j,org.jose4j.json,org.jose4j.base64url,javax.crypto.spec,org.jose4j.jwx,org.jose4j.jws,org.jose4j.jwa'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.jws'/>
      <p n='uses' v='org.jose4j.keys,org.jose4j.jca,org.jose4j.lang,org.jose4j.jwa,org.slf4j,org.jose4j.mac,javax.crypto,org.jose4j.jwx,org.jose4j.base64url'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.jwt.consumer'/>
      <p n='uses' v='org.jose4j.jwt,org.jose4j.jws,org.jose4j.jwx,org.jose4j.jwe,org.jose4j.jca,org.jose4j.lang,org.jose4j.jwa,org.jose4j.keys.resolvers'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.jwt'/>
      <p n='uses' v='org.jose4j.json,org.jose4j.lang,org.jose4j.jwt.consumer,org.jose4j.base64url'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.jwx'/>
      <p n='uses' v='org.jose4j.lang,org.jose4j.jwk,org.jose4j.json,org.jose4j.base64url,org.jose4j.jwe,org.jose4j.keys,org.jose4j.jca,org.jose4j.jws,org.jose4j.jwa'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.keys'/>
      <p n='uses' v='javax.crypto.spec,org.jose4j.lang,org.jose4j.base64url'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.keys.resolvers'/>
      <p n='uses' v='org.jose4j.jwx,org.jose4j.jwe,org.jose4j.lang,org.jose4j.jwk,org.jose4j.jws,org.slf4j,org.jose4j.keys'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.lang'/>
      <p n='uses' v='org.jose4j.base64url,org.jose4j.jwt'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.mac'/>
      <p n='uses' v='org.jose4j.lang,javax.crypto'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jose4j.zip'/>
      <p n='uses' v='org.jose4j.lang,org.jose4j.jwa,org.jose4j.keys'/>
      <p n='version' t='version' v='0.6.3'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='217281ced522dc08ec352179363989c4'/>
      <p n='sha256' v='5f32e4725b3c0815d8e6291bdfb2e8c9bbba404af0a0fb12fa5aad48e9185104'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto.spec
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=org.jose4j.lang)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.jose4j.lang
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
  </resource>
  <resource id='org.eclipse.osgi/3.13.200.v20181130-2106' md5='7957888c544d6f046f7695015aa2f139' presentationname='OSGi System Bundle' sha256='c539265613a1f1600921d5ea82749a7fd28ffb5d5352ef75d5d6ac9f1a03a118' symbolicname='org.eclipse.osgi' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.eclipse.osgi-3.13.200.v20181130-2106.jar' version='3.13.200.v20181130-2106'>
    <description>
      OSGi System Bundle
    </description>
    <size>
      1450076
    </size>
    <documentation>
      http://www.eclipse.org
    </documentation>
    <copyright>
      Copyright (c) 2003, 2018 IBM Corporation and others. This program
       and the accompanying materials  are made available under the
       terms of the Eclipse Public License 2.0 which accompanies
       this distribution, and is available at https://www.eclipse.org/legal/epl-2.0/
    </copyright>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='OSGi System Bundle'/>
      <p n='symbolicname' v='org.eclipse.osgi'/>
      <p n='version' t='version' v='3.13.200.v20181130-2106'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.core.runtime.adaptor'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-friends' v='org.eclipse.core.runtime'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.core.runtime.internal.adaptor'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.equinox.log'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.log'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.container'/>
      <p n='uses' v='org.eclipse.osgi.report.resolution,  org.osgi.framework.wiring,  org.osgi.framework.startlevel,  org.osgi.framework,  org.osgi.framework.hooks.resolver,  org.osgi.service.resolver,  org.osgi.resource,  org.eclipse.osgi.service.debug'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.container.builders'/>
      <p n='uses' v='org.eclipse.osgi.util,org.eclipse.osgi.container'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.container.namespaces'/>
      <p n='uses' v='org.osgi.resource'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.console'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.eventmgr'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.internal.reliablefile'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.log'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.framework.util'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.debug'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.framework'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.hookregistry'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-friends' v='org.eclipse.osgi.tests'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.loader'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.loader.buddy'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.loader.classpath'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.loader.sources'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.location'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.messages'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.provisional.service.security'/>
      <p n='version' t='version' v='1.0.0'/>
      <p n='x-friends' v='org.eclipse.equinox.security.ui'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.provisional.verifier'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-friends' v='org.eclipse.ui.workbench,org.eclipse.equinox.p2.artifact.repository'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.service.security'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-friends' v='org.eclipse.equinox.security.ui'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.serviceregistry'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.signedcontent'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.internal.url'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.launch'/>
      <p n='uses' v='org.osgi.framework,org.osgi.framework.launch'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.report.resolution'/>
      <p n='uses' v='org.osgi.service.resolver,org.osgi.resource'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.datalocation'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.debug'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.environment'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.localization'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.pluginconversion'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.resolver'/>
      <p n='uses' v='org.osgi.framework,org.osgi.framework.hooks.resolver,org.osgi.framework.wiring'/>
      <p n='version' t='version' v='1.6.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.runnable'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.security'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.service.urlconversion'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.signedcontent'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.storage'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-friends' v='org.eclipse.osgi.tests'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.storage.bundlefile'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.storage.url.reference'/>
      <p n='version' t='version' v='0.0.0'/>
      <p n='x-internal' v='true'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.storagemanager'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.eclipse.osgi.util'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.dto'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.9.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.dto'/>
      <p n='uses' v='org.osgi.dto'/>
      <p n='version' t='version' v='1.8.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.bundle'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.resolver'/>
      <p n='uses' v='org.osgi.framework.wiring'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.service'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.hooks.weaving'/>
      <p n='uses' v='org.osgi.framework.wiring'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.launch'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.namespace'/>
      <p n='uses' v='org.osgi.resource'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.startlevel'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.startlevel.dto'/>
      <p n='uses' v='org.osgi.dto'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.wiring'/>
      <p n='uses' v='org.osgi.framework,org.osgi.resource'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.framework.wiring.dto'/>
      <p n='uses' v='org.osgi.dto,org.osgi.resource.dto'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.resource'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.resource.dto'/>
      <p n='uses' v='org.osgi.dto'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.condpermadmin'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.log'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.log.admin'/>
      <p n='uses' v='org.osgi.service.log'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.packageadmin'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.permissionadmin'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.resolver'/>
      <p n='uses' v='org.osgi.resource'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.startlevel'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.url'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.tracker'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.5.2'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='7957888c544d6f046f7695015aa2f139'/>
      <p n='sha256' v='c539265613a1f1600921d5ea82749a7fd28ffb5d5352ef75d5d6ac9f1a03a118'/>
    </capability>
  </resource>
  <resource id='org.glassfish.javax.json/1.0.4' md5='569870f975deeeb6691fcb9bc02a9555' presentationname='JSR 353 (JSON Processing) Default Provider' sha256='0e1dec40a1ede965941251eda968aeee052cc4f50378bc316cc48e8159bdbeb4' symbolicname='org.glassfish.javax.json' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.glassfish.javax.json-1.0.4.jar' version='1.0.4'>
    <description>
      Default provider for JSR 353:Java API for Processing JSON
    </description>
    <size>
      85147
    </size>
    <license>
      https://glassfish.java.net/public/CDDL+GPL_1_1.html
    </license>
    <documentation>
      http://www.oracle.com
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JSR 353 (JSON Processing) Default Provider'/>
      <p n='symbolicname' v='org.glassfish.javax.json'/>
      <p n='version' t='version' v='1.0.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.json'/>
      <p n='uses' v='javax.json.stream,javax.json.spi'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.json.stream'/>
      <p n='uses' v='javax.json'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.json.spi'/>
      <p n='uses' v='javax.json,javax.json.stream'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='569870f975deeeb6691fcb9bc02a9555'/>
      <p n='sha256' v='0e1dec40a1ede965941251eda968aeee052cc4f50378bc316cc48e8159bdbeb4'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.json)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.json ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.json.spi)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.json.spi ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.json.stream)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.json.stream ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.jsoup/1.12.1' md5='79bb9e9e8b50ef80a18bd46426befc5a' presentationname='jsoup Java HTML Parser' sha256='4f961f68e47740dd7576c9685774a7b25b92f1017af24e2f707b30e893abade3' symbolicname='org.jsoup' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.jsoup-1.12.1.jar' version='1.12.1'>
    <description>
      jsoup is a Java library for working with real-world HTML. It
       provides a very convenient API for extracting and manipulating
       data, using the best of DOM, CSS, and jquery-like methods.
       jsoup implements the WHATWG HTML5 specification, and parses
       HTML to the same DOM as modern browsers do.
    </description>
    <size>
      397115
    </size>
    <license>
      https://jsoup.org/license
    </license>
    <documentation>
      https://jsoup.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='jsoup Java HTML Parser'/>
      <p n='symbolicname' v='org.jsoup'/>
      <p n='version' t='version' v='1.12.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jsoup'/>
      <p n='uses' v='javax.net.ssl,org.jsoup.nodes,org.jsoup.parser,org.jsoup.safety'/>
      <p n='version' t='version' v='1.12.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jsoup.nodes'/>
      <p n='uses' v='org.jsoup,org.jsoup.parser,org.jsoup.select'/>
      <p n='version' t='version' v='1.12.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jsoup.parser'/>
      <p n='uses' v='org.jsoup.nodes'/>
      <p n='version' t='version' v='1.12.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jsoup.safety'/>
      <p n='uses' v='org.jsoup.nodes'/>
      <p n='version' t='version' v='1.12.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jsoup.examples'/>
      <p n='uses' v='org.jsoup.nodes'/>
      <p n='version' t='version' v='1.12.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jsoup.select'/>
      <p n='uses' v='org.jsoup.nodes'/>
      <p n='version' t='version' v='1.12.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jsoup.helper'/>
      <p n='uses' v='javax.net.ssl,javax.xml.parsers,org.jsoup,org.jsoup.nodes,org.jsoup.parser,org.jsoup.select,org.w3c.dom'/>
      <p n='version' t='version' v='1.12.1'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='79bb9e9e8b50ef80a18bd46426befc5a'/>
      <p n='sha256' v='4f961f68e47740dd7576c9685774a7b25b92f1017af24e2f707b30e893abade3'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='org.jsr-305/3.0.2' md5='dd83accb899363c32b07d7a1b2e4ce40' presentationname='FindBugs-jsr305' sha256='766ad2a0783f2687962c8ad74ceecc38a28b9f72a2d085ee438b7813e928d0c7' symbolicname='org.jsr-305' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.jsr-305-3.0.2.jar' version='3.0.2'>
    <description>
      JSR305 Annotations for Findbugs
    </description>
    <size>
      19936
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='FindBugs-jsr305'/>
      <p n='symbolicname' v='org.jsr-305'/>
      <p n='version' t='version' v='3.0.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.annotation'/>
      <p n='uses' v='javax.annotation.meta'/>
      <p n='version' t='version' v='3.0.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.annotation.concurrent'/>
      <p n='version' t='version' v='3.0.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.annotation.meta'/>
      <p n='uses' v='javax.annotation'/>
      <p n='version' t='version' v='3.0.2'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='dd83accb899363c32b07d7a1b2e4ce40'/>
      <p n='sha256' v='766ad2a0783f2687962c8ad74ceecc38a28b9f72a2d085ee438b7813e928d0c7'/>
    </capability>
  </resource>
  <resource id='org.osgi.impl.bundle.repoindex.lib/3.5.0.201709291849' md5='bd8449ac90ecb4d83cef13d3d7cd23eb' presentationname='RepoIndex lib' sha256='0c849c4e90ea97c8933a2c3ee767ec6ee57ed8e72272d2f92664587987632c78' symbolicname='org.osgi.impl.bundle.repoindex.lib' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.osgi.impl.bundle.repoindex.lib-3.5.0.201709291849.jar' version='3.5.0.201709291849'>
    <description>
      RepoIndex: Repository Index Generator Library
    </description>
    <size>
      103158
    </size>
    <license>
      jar:file:/Users/gwatkins/Projects/iTMSTransporter/Applications/iTMSTransporter/dist/share/OSGi-Bundles/org.osgi.impl.bundle.repoindex.lib-3.5.0.201709291849.jar!/Apache-2.0;
       description="Apache License, Version 2.0"; link="http://www.apache.org/licenses/LICENSE-2.0"
    </license>
    <documentation>
      http://bnd.bndtools.org/
    </documentation>
    <copyright>
      Copyright (c) aQute SARL (2000, 2017) and others. All Rights
       Reserved.
    </copyright>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='RepoIndex lib'/>
      <p n='symbolicname' v='org.osgi.impl.bundle.repoindex.lib'/>
      <p n='version' t='version' v='3.5.0.201709291849'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.indexer'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.log'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.indexer.impl'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.indexer,org.osgi.service.indexer.impl.types,org.osgi.service.log'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.indexer.impl.types'/>
      <p n='uses' v='org.osgi.framework,org.osgi.service.indexer.impl.util'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.indexer.impl.util'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='bd8449ac90ecb4d83cef13d3d7cd23eb'/>
      <p n='sha256' v='0c849c4e90ea97c8933a2c3ee767ec6ee57ed8e72272d2f92664587987632c78'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.security.auth.x500)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.x500
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.indexer)(version&gt;=2.1.0)(!(version&gt;=2.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.indexer ;version=[2.1.0,2.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.indexer.impl.util)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.indexer.impl.util ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
  </resource>
  <resource id='org.osgi.util.function/1.1.0.201802012106' md5='496a04fd75627bb4ff4a69c5175433ad' presentationname='org.osgi:org.osgi.util.function' sha256='83d52d198f8bdd4cd9a02ecb7f05e01e0d59d1c960256db6dccd16962f79d7c5' symbolicname='org.osgi.util.function' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.osgi.util.function-1.1.0.201802012106.jar' version='1.1.0.201802012106'>
    <description>
      OSGi Companion Code for org.osgi.util.function Version 1.1.0
    </description>
    <size>
      14053
    </size>
    <license>
      jar:file:/Users/gwatkins/Projects/iTMSTransporter/Applications/iTMSTransporter/dist/share/OSGi-Bundles/org.osgi.util.function-1.1.0.201802012106.jar!/Apache-2.0;
       link="http://www.apache.org/licenses/LICENSE-2.0"; description="Apache
       License, Version 2.0"
    </license>
    <documentation>
      https://www.osgi.org/
    </documentation>
    <copyright>
      Copyright (c) OSGi Alliance (2000, 2018). All Rights Reserved.
    </copyright>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.osgi:org.osgi.util.function'/>
      <p n='symbolicname' v='org.osgi.util.function'/>
      <p n='version' t='version' v='1.1.0.201802012106'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.function'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='496a04fd75627bb4ff4a69c5175433ad'/>
      <p n='sha256' v='83d52d198f8bdd4cd9a02ecb7f05e01e0d59d1c960256db6dccd16962f79d7c5'/>
    </capability>
  </resource>
  <resource id='org.osgi.util.promise/1.1.1.201810101357' md5='eaeec30d0c9164b5feafc534ee6a95c7' presentationname='org.osgi:org.osgi.util.promise' sha256='4f85beccd281cc1a4e735bd266a0dd3db11651d3d0dde001e6bfa55dbdfdee83' symbolicname='org.osgi.util.promise' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.osgi.util.promise-1.1.1.201810101357.jar' version='1.1.1.201810101357'>
    <description>
      OSGi Companion Code for org.osgi.util.promise Version 1.1.1
    </description>
    <size>
      75587
    </size>
    <license>
      jar:file:/Users/gwatkins/Projects/iTMSTransporter/Applications/iTMSTransporter/dist/share/OSGi-Bundles/org.osgi.util.promise-1.1.1.201810101357.jar!/Apache-2.0;
       link="http://www.apache.org/licenses/LICENSE-2.0"; description="Apache
       License, Version 2.0"
    </license>
    <documentation>
      https://www.osgi.org/
    </documentation>
    <copyright>
      Copyright (c) OSGi Alliance (2000, 2018). All Rights Reserved.
    </copyright>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='org.osgi:org.osgi.util.promise'/>
      <p n='symbolicname' v='org.osgi.util.promise'/>
      <p n='version' t='version' v='1.1.1.201810101357'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.util.promise'/>
      <p n='uses' v='org.osgi.util.function'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='eaeec30d0c9164b5feafc534ee6a95c7'/>
      <p n='sha256' v='4f85beccd281cc1a4e735bd266a0dd3db11651d3d0dde001e6bfa55dbdfdee83'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.util.function)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.function ;version=[1.1.0,2.0.0)
    </require>
  </resource>
  <resource id='org.xerial.sqlite-jdbc/3.27.2.1' md5='0b2eff4ff050a1e6edb0dd0435de3ef5' presentationname='SQLite JDBC' sha256='dc98d071b477437e4388f83ea54f7aa3b972e5b83e1708f11c3634a6ba41e115' symbolicname='org.xerial.sqlite-jdbc' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/org.xerial.sqlite-jdbc-3.27.2.1.jar' version='3.27.2.1'>
    <description>
      SQLite JDBC library
    </description>
    <size>
      6029800
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='SQLite JDBC'/>
      <p n='symbolicname' v='org.xerial.sqlite-jdbc'/>
      <p n='version' t='version' v='3.27.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.sqlite'/>
      <p n='uses' v='javax.sql,org.sqlite.core,org.sqlite.date'/>
      <p n='version' t='version' v='3.27.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.sqlite.core'/>
      <p n='uses' v='org.sqlite,org.sqlite.jdbc4'/>
      <p n='version' t='version' v='3.27.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.sqlite.util'/>
      <p n='version' t='version' v='3.27.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.sqlite.date'/>
      <p n='version' t='version' v='3.27.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.sqlite.javax'/>
      <p n='uses' v='javax.sql,org.sqlite,org.sqlite.jdbc4'/>
      <p n='version' t='version' v='3.27.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.sqlite.jdbc4'/>
      <p n='uses' v='javax.sql,org.sqlite,org.sqlite.core,org.sqlite.jdbc3'/>
      <p n='version' t='version' v='3.27.2.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.sqlite.jdbc3'/>
      <p n='uses' v='org.sqlite,org.sqlite.core'/>
      <p n='version' t='version' v='3.27.2.1'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='0b2eff4ff050a1e6edb0dd0435de3ef5'/>
      <p n='sha256' v='dc98d071b477437e4388f83ea54f7aa3b972e5b83e1708f11c3634a6ba41e115'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sql
    </require>
  </resource>
  <resource id='slf4j.api/1.7.25' md5='caafe376afb7086dcbee79f780394ca3' presentationname='slf4j-api' sha256='18c4a0095d5c1da6b817592e767bb23d29dd2f560ad74df75ff3961dbde25b79' symbolicname='slf4j.api' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/slf4j.api-1.7.25.jar' version='1.7.25'>
    <description>
      The slf4j API
    </description>
    <size>
      41203
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='slf4j-api'/>
      <p n='symbolicname' v='slf4j.api'/>
      <p n='version' t='version' v='1.7.25'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j'/>
      <p n='version' t='version' v='1.7.25'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.spi'/>
      <p n='version' t='version' v='1.7.25'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.helpers'/>
      <p n='version' t='version' v='1.7.25'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.slf4j.event'/>
      <p n='version' t='version' v='1.7.25'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='caafe376afb7086dcbee79f780394ca3'/>
      <p n='sha256' v='18c4a0095d5c1da6b817592e767bb23d29dd2f560ad74df75ff3961dbde25b79'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.slf4j.impl)(version&gt;=1.6.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j.impl ;version=1.6.0
    </require>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='stax2-api/3.1.4' md5='c08e89de601b0a78f941b2c29db565c3' presentationname='Stax2 API' sha256='86d7c0b775a7c9b454cc6ba61d40a8eb3b99cc129f832eb9b977a3755b4b338e' symbolicname='stax2-api' uri='https://contentdelivery.itunes.apple.com/transporter/repositories/j2se8/2.1.0/bundles/stax2-api-3.1.4.jar' version='3.1.4'>
    <description>
      tax2 API is an extension to basic Stax 1.0 API that adds significant
       new functionality, such as full-featured bi-direction validation
       interface and high-performance Typed Access API.
    </description>
    <size>
      161867
    </size>
    <license>
      http://www.opensource.org/licenses/bsd-license.php
    </license>
    <documentation>
      http://fasterxml.com
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Stax2 API'/>
      <p n='symbolicname' v='stax2-api'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.stax2'/>
      <p n='uses' v='org.codehaus.stax2.validation,javax.xml.stream,org.codehaus.stax2.typed,javax.xml.namespace'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.stax2.evt'/>
      <p n='uses' v='javax.xml.stream.events,org.codehaus.stax2,javax.xml.stream'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.stax2.io'/>
      <p n='uses' v='javax.xml.transform'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.stax2.osgi'/>
      <p n='uses' v='org.codehaus.stax2,org.codehaus.stax2.validation'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.stax2.ri'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.stream,org.codehaus.stax2.ri.evt,org.codehaus.stax2.evt,javax.xml.stream.events,org.codehaus.stax2,javax.xml.stream.util,org.codehaus.stax2.util,org.codehaus.stax2.validation,org.codehaus.stax2.typed,org.codehaus.stax2.ri.typed'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.stax2.ri.dom'/>
      <p n='uses' v='org.codehaus.stax2,javax.xml.transform.dom,org.codehaus.stax2.ri,org.codehaus.stax2.validation,org.w3c.dom,org.codehaus.stax2.typed,org.codehaus.stax2.ri.typed,javax.xml.namespace,javax.xml.stream'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.stax2.ri.evt'/>
      <p n='uses' v='org.codehaus.stax2,javax.xml.stream,javax.xml.stream.events,javax.xml.namespace,org.codehaus.stax2.evt,org.codehaus.stax2.ri,javax.xml.stream.util'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.stax2.ri.typed'/>
      <p n='uses' v='org.codehaus.stax2.ri,org.codehaus.stax2.typed,javax.xml.namespace'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.stax2.typed'/>
      <p n='uses' v='javax.xml.stream,javax.xml.namespace'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.stax2.util'/>
      <p n='uses' v='org.codehaus.stax2,javax.xml.stream,javax.xml.stream.util,org.codehaus.stax2.validation,org.codehaus.stax2.typed,javax.xml.namespace'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.codehaus.stax2.validation'/>
      <p n='uses' v='javax.xml.stream,javax.xml.namespace'/>
      <p n='version' t='version' v='3.1.4'/>
    </capability>
    <capability name='com.apple.amp.checksums'>
      <p n='md5' v='c08e89de601b0a78f941b2c29db565c3'/>
      <p n='sha256' v='86d7c0b775a7c9b454cc6ba61d40a8eb3b99cc129f832eb9b977a3755b4b338e'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.events
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.util
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
</repository>